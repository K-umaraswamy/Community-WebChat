import React from 'react'
import { StyleSheet, SafeAreaView } from 'react-native'
import { RoomCreatorFooterProps, RenderButtonProps } from '../../types'
import ButtonComponent from './Button'
import Input from './Input'

export default function(props: RoomCreatorFooterProps) {
	function renderButton(button: RenderButtonProps) {
		if (props.renderButton === null) return null
		if (props.renderButton) return props.renderButton(button)

		const Component = props.ButtonComponent || ButtonComponent

		return <Component key={`${button.text}${Math.random()}`} {...button} />
	}
	const renderButtons = () => {
		return (
			<SafeAreaView style={styles.buttons}>
				{props.buttons.map((button, index) => {
					const ready = props.ready
					const loading = !!button.loading
					const buttonProps: RenderButtonProps = {
						backgroundColor: ready
							? button.color || 'blue'
							: button.disabledColor || 'lightgray',
						text: button.text,
						onPress: () =>
							button.onPress({
								selected: props.selected,
								ready,
								loading,
								text: props.text || ''
							}),
						textColor:
							(ready ? button.textColor : button.disabledTextColor) || 'white',
						ready,
						index,
						loading
					}

					return renderButton(buttonProps)
				})}
			</SafeAreaView>
		)
	}
	const maybeRenderInput = () => {
		if (!props.enableTextInput) return null
		if (!props.ready && !props.showInputWhenNotReady) return null

		return (
			<Input
				text={props.text}
				onChangeText={props.onChangeText}
				inputProps={props.inputProps}
				inputContainerStyle={props.inputContainerStyle}
				inputStyle={props.inputStyle}
			/>
		)
	}
	return (
		<>
			{maybeRenderInput()}
			{renderButtons()}
		</>
	)
}

const styles = StyleSheet.create({
	buttons: {
		flexDirection: 'row'
	}
})
