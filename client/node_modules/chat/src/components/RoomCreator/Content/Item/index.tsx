import React from 'react'
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native'
import { RoomCreatorItemProps } from '../../types'
import Icon from './Icon'
import Avatar from '../../../Avatar'
import Initials from '../../../Inbox/Item/Initials'
import { getInitials } from '../../../../helpers/getInitials'

export default React.memo((props: RoomCreatorItemProps) => {
	if (props.selected) console.log('selected!!', props.id)
	const onPress = () => props.toggleSelected(props.id)
	const renderSelectedIcon = () => {
		if (props.renderSelectedIcon === null) return null
		const iconProps = {
			activeColor: props.selectedIconActiveColor || '#147EFB',
			inactiveColor: props.selectedIconInactiveColor || '#D3D3D360',
			active: props.selected
		}
		if (props.renderSelectedIcon) return props.renderSelectedIcon(iconProps)

		return <Icon {...iconProps} />
	}
	const renderAvatarOrInitials = () => {
		return props.avatar ? (
			<Avatar avatar={props.avatar} size={50} />
		) : (
			<Initials size={50} initials={getInitials(props.name)} />
		)
	}
	return (
		<View>
			<TouchableOpacity onPress={onPress} style={styles.container}>
				<View style={styles.wrapper}>
					{renderAvatarOrInitials()}
					<View style={styles.content}>
						{!!props.handle && <Text style={styles.name}>{props.handle}</Text>}
						<Text>{props.name}</Text>
					</View>
					<View style={styles.checkContainer}>{renderSelectedIcon()}</View>
				</View>
			</TouchableOpacity>
		</View>
	)
})

const styles = StyleSheet.create({
	container: {
		paddingHorizontal: 16,
		paddingVertical: 10
		// borderBottomWidth: 0.5,
		// borderBottomColor: 'lightgray'
	},
	wrapper: {
		flexDirection: 'row',
		alignItems: 'center'
	},
	content: {
		flex: 1,
		marginLeft: 16
	},
	name: {
		fontWeight: 'bold'
	},
	image: {
		height: 50,
		width: 50,
		borderRadius: 25,
		overflow: 'hidden'
	},
	checkContainer: {
		justifyContent: 'center'
	},
	check: {
		height: 25,
		width: 25,
		borderRadius: 12.5,
		backgroundColor: 'lightgray'
		// overflow: 'hidden',
	},
	checked: {
		// backgroundColor: 'blue',
		flex: 1,
		alignItems: 'center',
		justifyContent: 'flex-start'
		// paddingBottom: 4,
	}
})
