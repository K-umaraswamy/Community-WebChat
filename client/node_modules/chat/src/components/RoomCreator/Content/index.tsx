import React, { useCallback } from 'react'
import { View, FlatList, StyleSheet } from 'react-native'
import Item from './Item'
import {
	RoomCreatorContentProps,
	RoomCreatorFooterProps,
	RoomCreatorItemProps,
	User
} from '../types'
import Footer from './Footer'

export default (props: RoomCreatorContentProps) => {
	const renderItem = ({ item }: { item: User }) => {
		if (props.renderItem === null) return null

		const itemProps: RoomCreatorItemProps = {
			...item,
			selected: !!props.selected[item.id],
			toggleSelected: props.toggleSelected,
			renderSelectedIcon: props.renderSelectedIcon,
			selectedIconActiveColor: props.selectedIconActiveColor,
			selectedIconInactiveColor: props.selectedIconInactiveColor
		}

		if (props.renderItem) return props.renderItem(itemProps)

		return <Item {...itemProps} />
	}

	const keyExtractor = useCallback((item: User) => item.id, [])

	const renderFooter = () => {
		if (props.renderFooter === null) return null

		const footerProps: RoomCreatorFooterProps = {
			renderButton: props.renderButton,
			buttons: props.buttons,
			ButtonComponent: props.ButtonComponent,
			ready: props.ready,
			selected: props.selected,
			enableTextInput: !!props.enableTextInput,
			inputContainerStyle: props.inputContainerStyle,
			inputStyle: props.inputStyle,
			showInputWhenNotReady: !!props.showInputWhenNotReady,
			inputProps: props.inputProps,
			onChangeText: props.onChangeText,
			text: props.text
		}
		if (props.renderFooter) return props.renderFooter(footerProps)

		return <Footer {...footerProps} />
	}

	return (
		<View style={styles.container}>
			<View style={styles.wrapper}>
				<FlatList
					bounces={false}
					keyExtractor={keyExtractor}
					renderItem={renderItem}
					data={props.users}
					extraData={props.selected}
					keyboardDismissMode="on-drag"
					keyboardShouldPersistTaps="handled"
				/>
				{renderFooter()}
			</View>
		</View>
	)
}

const styles = StyleSheet.create({
	container: { backgroundColor: 'white', flex: 1 },
	wrapper: { flex: 1, justifyContent: 'space-between' }
})
