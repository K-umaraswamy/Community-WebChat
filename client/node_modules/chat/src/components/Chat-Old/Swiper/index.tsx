import React, { useCallback } from 'react'
import Swipeable from 'react-native-gesture-handler/Swipeable'
import { SwipeableProps, SwipeActionProps } from '../types'
import Action from './Action'

export default (props: SwipeableProps) => {
	const { renderSwipeAction } = props
	const renderAction = useCallback(
		(actionProps: SwipeActionProps) => {
			if (renderSwipeAction) return renderSwipeAction(actionProps)

			return <Action {...actionProps} />
		},
		[renderSwipeAction]
	)

	const { swipeActions } = props
	const leftActions = swipeActions && swipeActions.left
	const rightActions = swipeActions && swipeActions.right

	const renderRightActions = useCallback(() => {
		if (rightActions) {
			rightActions.forEach(action => {})
		}
	}, [rightActions])

	const renderActionList = useCallback(() => {}, [])

	return <Swipeable></Swipeable>
}
