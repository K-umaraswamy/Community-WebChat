declare const _default: ({ roomId, text, delay }: {
    roomId: string;
    text: string;
    delay?: number | null | undefined;
}) => void;
/**
 * useTyping automatically updates the backend whenever a user is typing.
 *
 * @param options - A dictionary to configure the typing.
 * @param options.roomId - **Required** unique id of the room you're typing in.
 * @param options.text - **Required** The current text state of your chat input
 * @param options.delay (Optional) Set the timeout delay to mark typing false. Set null if you don't want a time out.
 *
 * @example
 * ```javascript
 * // input text state
 * const [text, setText] = useState('')
 * // let's say we're getting our room id from our react-navigation params
 * const navigation = useNavigation()
 * const roomId = navigation.params.id
 *
 * useTyping({ roomId, text })
 *
 * <ChatComponent text={text} onChangeText={setText} />
 * ```
 *
 * @returns
 * Doesn't return anything. We live in an undefined world, I suppose.
 *
 * @remarks
 * The actual data of who is typing is stored in the chatroom object.
 * If you want to get this data realtime in a room, consider using useRoom({ listen: true }). This data will also be in useInbox().
 * See docs for useRoom or useInbox for more.
 *
 */
export default _default;
