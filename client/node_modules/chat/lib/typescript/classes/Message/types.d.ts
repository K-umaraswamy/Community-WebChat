import { FieldValue } from '@firebase/firestore-types';
import { ReactionOption } from '../Reaction/types';
export interface Message {
    id: string;
}
export interface NewMessageModel extends Omit<Message, 'roomId'> {
    text: string;
    createdAt: Date;
    user: {
        id: string;
        name: string;
        avatar: string;
    };
    system?: boolean;
    media?: MessageMedia;
    reactions?: {
        [option in ReactionOption]: string[];
    };
}
export interface MessageMediaWithUrl {
    url: string;
    uri?: string;
    height: number;
    width: number;
    contentType: 'video' | 'image';
}
export interface MessageMediaWithUri {
    url: string;
    uri?: string;
    height: number;
    width: number;
    contentType: 'video' | 'image';
}
export declare type MessageMedia = MessageMediaWithUrl | MessageMediaWithUri;
export interface NewMessageFormattedForServer extends Omit<NewMessageModel, 'createdAt'> {
    createdAt: FieldValue;
}
export declare function isNewMessageModel(message: MessageModel): message is NewMessageModel;
export declare function isNewMessageFormattedForServer(message: MessageModel): message is NewMessageFormattedForServer;
export interface EditMessageModel extends Message {
    text?: string;
}
export declare type SendToRecipients = string[];
export declare type RoomId = string | string[];
export declare type MessageModel = Message | NewMessageModel[] | EditMessageModel | MessageModelDocument[] | NewMessageFormattedForServer[] | NewMessageFormattedForServer;
export interface MessageModelDocument extends Omit<NewMessageModel, 'createdAt'> {
    id: string;
    createdAt: firebase.firestore.Timestamp;
}
export declare type SendFromFeedRecipient = {
    id: string;
} | SendFromFeedRecipientArray;
export interface SendFromFeedRecipientArray {
    recipients: {
        id: string;
        name: string;
    }[];
}
export declare const recipientHasId: (recipient: SendFromFeedRecipient) => recipient is {
    id: string;
};
export declare const recipientHasMembers: (recipient: SendFromFeedRecipient) => recipient is SendFromFeedRecipientArray;
export declare type SendFromFeedRecipients = SendFromFeedRecipient[];
export interface SendFromFeedModel extends Omit<NewMessageModel, 'id'> {
    recipients: SendFromFeedRecipientArray['recipients'];
}
