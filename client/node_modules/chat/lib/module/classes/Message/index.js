import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _regeneratorRuntime from"@babel/runtime/regenerator";import _defineProperty from"@babel/runtime/helpers/defineProperty";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{recipientHasId,recipientHasMembers,isNewMessageModel}from'./types';import{fuego,chat}from'../../components/ChatProvider/index';import Room from'../Room';var _default=function(){function _default(message){_classCallCheck(this,_default);this.message=message;}_createClass(_default,[{key:"sendToRooms",value:function sendToRooms(recipients){var send;return _regeneratorRuntime.async(function sendToRooms$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;send=fuego.firebase.functions().httpsCallable(chat.httpCallables.sendMessageToRooms);if(isNewMessageModel(this.message)){_context.next=4;break;}throw new Error('FAILED TO SEND TO ROOMS: message object is not NewMessageModel');case 4:this.message=_objectSpread({},this.message,{createdAt:fuego.firebase.firestore.FieldValue.serverTimestamp()});return _context.abrupt("return",send({message:this.message,recipients:recipients}));case 8:_context.prev=8;_context.t0=_context["catch"](0);console.error(_context.t0);return _context.abrupt("return",{data:null});case 12:case"end":return _context.stop();}}},null,this,[[0,8]]);}},{key:"sendToPeople",value:function sendToPeople(recipients){var send;return _regeneratorRuntime.async(function sendToPeople$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:send=fuego.firebase.functions().httpsCallable(chat.httpCallables.sendMessageToPeople);_context2.prev=1;if(isNewMessageModel(this.message)){_context2.next=4;break;}throw new Error('FAILED TO SEND TO PEOPLE: message object is not NewMessageModel');case 4:this.message=_objectSpread({},this.message,{createdAt:fuego.firebase.firestore.FieldValue.serverTimestamp()});return _context2.abrupt("return",send({message:this.message,recipients:recipients}));case 8:_context2.prev=8;_context2.t0=_context2["catch"](1);console.error(_context2.t0);return _context2.abrupt("return",{data:null});case 12:case"end":return _context2.stop();}}},null,this,[[1,8]]);}},{key:"sendToGroup",value:function sendToGroup(recipients){var send;return _regeneratorRuntime.async(function sendToGroup$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:send=fuego.firebase.functions().httpsCallable(chat.httpCallables.sendMessageToGroup);_context3.prev=1;if(isNewMessageModel(this.message)){_context3.next=4;break;}throw new Error('FAILED TO SEND TO PEOPLE: message object is not NewMessageModel');case 4:this.message=_objectSpread({},this.message,{createdAt:fuego.firebase.firestore.FieldValue.serverTimestamp()});return _context3.abrupt("return",send({message:this.message,recipients:recipients}));case 8:_context3.prev=8;_context3.t0=_context3["catch"](1);console.error(_context3.t0);return _context3.abrupt("return",{data:null});case 12:case"end":return _context3.stop();}}},null,this,[[1,8]]);}},{key:"sendFromFeed",value:function sendFromFeed(to){var _this=this;var batch=fuego.db.batch();var promises=[];to.forEach(function(room){var _ref=_this.message,id=_ref.id,message=_objectWithoutProperties(_ref,["id"]);if(recipientHasId(room)){var _ref2=new Room({id:room.id}),messagesPath=_ref2.messagesPath;var ref=fuego.db.collection(messagesPath).doc(id);batch.set(ref,message);}else if(recipientHasMembers(room)){var peopleInThisRoomOtherThanMe=room.recipients.slice().sort(function(a,b){return a.id>b.id?1:-1;});var addMessage=fuego.firebase.functions().httpsCallable(chat.httpCallables.sendMessageFromFeed);var newMessage=_objectSpread({},message,{recipients:peopleInThisRoomOtherThanMe});promises.push(addMessage(newMessage));}});return Promise.all([batch.commit()].concat(promises));}},{key:"send",value:function send(roomId){this.addToFirebase(roomId);}},{key:"edit",value:function edit(roomId){return this.updateOnFirebase(roomId);}},{key:"formatForRender",value:function formatForRender(){function isDocList(m){return!!m;}function isDocument(m){return!!m;}try{if(isDocList(this.message)){return this.message.map(function(doc){return _objectSpread({},doc,{id:doc.id,createdAt:doc.createdAt.toDate()});})||[];}if(isDocument(this.message))return _objectSpread({},this.message,{id:this.message.id,createdAt:this.message.createdAt.toDate()});throw new Error('Wrong model here.');}catch(e){console.error('wrong model given to format for render in Message class.',e);return null;}}},{key:"formatForSend",value:function formatForSend(){try{var isNew=function isNew(m){return!!m;};if(isNew(this.message)){this.message=this.message.map(function(message){return _objectSpread({},message,{text:message.text&&message.text.trim()||'',createdAt:fuego.firebase.firestore.FieldValue.serverTimestamp()});});return this;}throw new Error('wrong format for formatting for send');}catch(e){console.error(e);return this;}}},{key:"addToFirebase",value:function addToFirebase(roomId){var messages=this.message;var batch=fuego.db.batch();var updateBatch=function updateBatch(roomId){var addToBatch=function addToBatch(message){try{var _ref3=new Room({id:roomId}),messagesPath=_ref3.messagesPath,roomPath=_ref3.path;var ref=fuego.db.collection(messagesPath).doc(message.id);var id=message.id,messageDoc=_objectWithoutProperties(message,["id"]);batch.set(ref,messageDoc);var _ref4=fuego.auth().currentUser,displayName=_ref4.displayName,uid=_ref4.uid;var roomRef=fuego.db.doc(roomPath);var lastMessage={name:displayName||'Name failed',id:uid,system:false,text:message.text,createdAt:message.createdAt};batch.update(roomRef,{lastMessage:lastMessage});}catch(e){console.error('sending message had an error:',e);}};messages.forEach(addToBatch);};if(Array.isArray(roomId)){;roomId.forEach(updateBatch);}else{updateBatch(roomId);}return batch.commit();}},{key:"updateOnFirebase",value:function updateOnFirebase(roomId){var _ref5=new Room({id:roomId}),path=_ref5.path;var _ref6=this.message,id=_ref6.id,message=_objectWithoutProperties(_ref6,["id"]);return fuego.db.collection(path).doc(this.message.id).set(message,{merge:true});}},{key:"getUsersWhoReacted",value:function getUsersWhoReacted(reaction,_ref7){var roomMembers=_ref7.roomMembers;var users=[];if(!isNewMessageModel(this.message)){console.warn('error getting users who reacted. Needs the new message model passed as an argument, but instead it got this:',this.message);}else if(this.message.reactions){this.message.reactions[reaction].forEach(function(uid){return roomMembers[uid]&&users.push(roomMembers[uid]);});}return users;}}]);return _default;}();export{_default as default};
//# sourceMappingURL=index.js.map