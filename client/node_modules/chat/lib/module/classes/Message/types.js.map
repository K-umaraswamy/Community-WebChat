{"version":3,"sources":["types.ts"],"names":["isNewMessageModel","message","isNewMessageFormattedForServer","recipientHasId","recipient","recipientHasMembers"],"mappings":"AA0DA,MAAO,SAASA,CAAAA,iBAAT,CACNC,OADM,CAEuB,CAC7B,MAAO,CAAC,CAAEA,OAAV,CACA,CAED,MAAO,SAASC,CAAAA,8BAAT,CACND,OADM,CAEoC,CAC1C,MAAO,CAAC,CAAEA,OAAV,CACA,CAoCD,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAC7BC,SAD6B,QAEI,CAAC,CAAEA,SAFP,EAAvB,CAIP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAClCD,SADkC,QAGlC,CAAC,CAAEA,SAH+B,EAA5B","sourcesContent":["import { FieldValue } from '@firebase/firestore-types'\nimport { ReactionOption } from '../Reaction/types'\n\nexport interface Message {\n\tid: string\n\t// roomId: string\n}\n\nexport interface NewMessageModel extends Omit<Message, 'roomId'> {\n\ttext: string\n\tcreatedAt: Date\n\tuser: {\n\t\tid: string\n\t\tname: string\n\t\tavatar: string\n\t}\n\t// image?: string\n\t// // You can also add a video prop:\n\t// video?: string\n\tsystem?: boolean\n\tmedia?: MessageMedia\n\treactions?: {\n\t\t[option in ReactionOption]: string[]\n\t}\n\t// Any additional custom parameters are passed through\n}\n\nexport interface MessageMediaWithUrl {\n\turl: string\n\turi?: string\n\theight: number\n\twidth: number\n\tcontentType: 'video' | 'image'\n}\n\nexport interface MessageMediaWithUri {\n\turl: string\n\turi?: string\n\theight: number\n\twidth: number\n\tcontentType: 'video' | 'image'\n}\n\nexport type MessageMedia = MessageMediaWithUrl | MessageMediaWithUri\n\n// export interface MessageMedia {\n// \turl?: string\n// \turi: string\n// \theight: number\n// \twidth: number\n// \tcontentType: 'video' | 'image'\n// }\n\nexport interface NewMessageFormattedForServer\n\textends Omit<NewMessageModel, 'createdAt'> {\n\tcreatedAt: FieldValue\n}\n\nexport function isNewMessageModel(\n\tmessage: MessageModel\n): message is NewMessageModel {\n\treturn !!(message as NewMessageModel)\n}\n\nexport function isNewMessageFormattedForServer(\n\tmessage: MessageModel\n): message is NewMessageFormattedForServer {\n\treturn !!(message as NewMessageFormattedForServer)\n}\n\nexport interface EditMessageModel extends Message {\n\ttext?: string\n}\n\nexport type SendToRecipients = string[]\n\n// you might send a message to multiple rooms\nexport type RoomId = string | string[]\n\n// the message model can be one of them\nexport type MessageModel =\n\t| Message\n\t| NewMessageModel[]\n\t| EditMessageModel\n\t| MessageModelDocument[]\n\t| NewMessageFormattedForServer[]\n\t| NewMessageFormattedForServer\n\nexport interface MessageModelDocument\n\textends Omit<NewMessageModel, 'createdAt'> {\n\tid: string\n\tcreatedAt: firebase.firestore.Timestamp\n}\n\nexport type SendFromFeedRecipient =\n\t| {\n\t\t\tid: string // roomId\n\t  }\n\t| SendFromFeedRecipientArray\n\nexport interface SendFromFeedRecipientArray {\n\trecipients: { id: string; name: string }[]\n}\n\nexport const recipientHasId = (\n\trecipient: SendFromFeedRecipient\n): recipient is { id: string } => !!(recipient as { id: string })\n\nexport const recipientHasMembers = (\n\trecipient: SendFromFeedRecipient\n): recipient is SendFromFeedRecipientArray =>\n\t!!(recipient as SendFromFeedRecipientArray)\n\nexport type SendFromFeedRecipients = SendFromFeedRecipient[]\n\nexport interface SendFromFeedModel extends Omit<NewMessageModel, 'id'> {\n\trecipients: SendFromFeedRecipientArray['recipients']\n}\n"]}