{"version":3,"sources":["types.ts"],"names":["currentUserExists","user","roomIsEditModel","room","roomIsNewModel","roomIsCreateCallable"],"mappings":"AA8IA,MAAO,SAASA,CAAAA,iBAAT,CACNC,IADM,CAEkB,CACxB,MAAO,CAAC,CAAEA,IAAV,CACA,CAED,MAAO,SAASC,CAAAA,eAAT,CAAyBC,IAAzB,CAAiE,CACvE,MAAO,CAAC,CAAEA,IAAV,CACA,CAED,MAAO,SAASC,CAAAA,cAAT,CAAwBD,IAAxB,CAA+D,CACrE,MAAO,CAAC,CAAEA,IAAV,CACA,CAED,MAAO,SAASE,CAAAA,oBAAT,CACNF,IADM,CAE4B,CAClC,MAAO,CAAC,CAAEA,IAAV,CACA","sourcesContent":["import { FieldValue, Timestamp } from '@firebase/firestore-types'\nimport * as firebase from 'firebase'\n\nexport interface LastMessage {\n\tcreatedAt: Date\n\ttext: string\n\tname: string\n\tsystem: boolean\n\tid: string\n}\n\nexport interface LastMessageServer extends Omit<LastMessage, 'createdAt'> {\n\tcreatedAt: FieldValue\n}\n\n/**\n * Unread count schema in the members dictionary for each room\n */\nexport interface UnreadCount {\n\tcount: number\n\t/**\n\t * The timestamp of the last time you cleared messages.\n\t */\n\tlastCleared: Date\n\t/**\n\t * Details of the last message you saw.\n\t */\n\tlastSeen: {\n\t\tid: string\n\t\tcreatedAt: Date\n\t}\n}\n\nexport interface UnreadCountDocument extends Omit<UnreadCount, 'lastCleared'> {\n\tlastCleared: firebase.firestore.Timestamp\n}\n\nexport interface UnreadCountServer extends Omit<UnreadCount, 'lastCleared'> {\n\tlastCleared: firebase.firestore.FieldValue\n}\n\nexport interface RoomPropertiesModel {\n\tid: string\n\t// avatar url for this room\n\tavatar?: string\n\tmembers?: RoomMembers\n\tname?: string\n}\n\nexport interface Typing {\n\tstate: 'typing' | 'nothing'\n\tlastChanged: typeof firebase.database.ServerValue.TIMESTAMP\n}\n\nexport interface RoomMember {\n\t// typing?: boolean\n\ttyping?: Typing\n\texists: boolean\n\t// we should probably do this one via cloud function\n\tname: string\n\tnickname?: string\n\tavatar?: string\n\tjoinedAt: FieldValue\n\tunreadCount?: UnreadCount\n}\n\nexport interface ExistingRoomMember {\n\t// optional nickname specific to this room\n\tnickname?: string\n\t// url to specific image for this room\n\tavatar?: string\n}\n\nexport interface NewRoomMember extends RoomMember {}\n\n/**\n * Dictionary of members in the room.\n */\nexport interface RoomMembers {\n\t[id: string]: RoomMember\n}\n\n/**\n * Configuration for the room class. Members doesn't need to include me.\n *\n * @example\n * ```\n * const room = new Room(config: NewRoomModel)\n * await room.create()\n * ```\n */\nexport interface NewRoomModel extends Omit<RoomPropertiesModel, 'id'> {\n\tmembers: RoomMembers\n}\n\nexport interface CreateCallableRoomModel extends Partial<RoomPropertiesModel> {\n\trecipients: string[]\n}\n\nexport interface EditRoomModel extends Omit<RoomPropertiesModel, 'members'> {\n\tmembers?: RoomMembers\n\tname?: string\n\tlastMessage?: LastMessage\n}\n\nexport interface ExistingRoomModel extends RoomPropertiesModel {\n\tlastMessage: LastMessage\n\tmembers: RoomMembers\n\tunreadCount?: number\n\tcreatedAt: FieldValue\n\tlastEdited: FieldValue\n\tcurrentMembers: string[]\n}\n\nexport interface CreateRoomModel\n\textends Omit<Omit<ExistingRoomModel, 'id'>, 'lastMessage'> {\n\tlastMessage: LastMessageServer\n}\n\nexport interface CreateRoomCallableModel\n\textends Omit<RoomPropertiesModel, 'id'> {\n\tmembers: RoomMembers\n}\n\ninterface LastMessageDocument extends Omit<LastMessage, 'createdAt'> {\n\tcreatedAt: Timestamp\n}\n\nexport interface ExistingRoomDocument\n\textends Omit<ExistingRoomModel, 'lastMessage'> {\n\tlastMessage: LastMessageDocument\n}\n\nexport type RoomModel =\n\t| RoomPropertiesModel\n\t| NewRoomModel\n\t| ExistingRoomModel\n\t| CreateCallableRoomModel\n\n// typescript type guard functions\n// see: https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\n\nexport function currentUserExists(\n\tuser: firebase.User | null\n): user is firebase.User {\n\treturn !!(user as firebase.User)\n}\n\nexport function roomIsEditModel(room: RoomModel): room is EditRoomModel {\n\treturn !!(room as EditRoomModel)\n}\n\nexport function roomIsNewModel(room: RoomModel): room is NewRoomModel {\n\treturn !!(room as NewRoomModel)\n}\n\nexport function roomIsCreateCallable(\n\troom: RoomModel\n): room is CreateCallableRoomModel {\n\treturn !!(room as CreateCallableRoomModel)\n}\n"]}