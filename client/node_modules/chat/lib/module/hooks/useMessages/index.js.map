{"version":3,"sources":["index.ts"],"names":["useMemo","useCallback","useState","useEffect","useRef","useFuego","Room","Message","LIMIT","orderBy","id","config","options","path","messagesPath","limit","setLimit","currentLimit","latestFetchMoreId","query","listen","current","data","loading","error","ref","send","message","formatForSend","edit","formattedMessages","isArrayOfMessageDocuments","m","formatted","formatForRender","fetchMore","lastMessageId","length","l","empty","fetchingMore"],"mappings":"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","sourcesContent":["import { useMemo, useCallback, useState, useEffect, useRef } from 'react'\nimport { useFuego } from '@nandorojo/fuego'\nimport { UseMessagesConfig } from './types'\nimport Room from '../../classes/Room'\nimport {\n\tNewMessageModel,\n\tEditMessageModel,\n\tMessageModelDocument,\n} from '../../classes/Message/types'\nimport Message from '../../classes/Message'\nimport {\n\tUseQueryConfig,\n\tQueryDataHandler,\n} from '@nandorojo/fuego/lib/typescript/hooks/useFuego/types'\n\nconst LIMIT = 30\n\nconst orderBy: UseQueryConfig['orderBy'] = ['createdAt', 'desc']\n/**\n *\tReact hook to set up a lisener for a room's messages\n *\n * \t@param { id } the roomId, along with other query options from `useFuego` hook\n *\n *\t@returns { data: formattedMessages, loading, error, ref, path, empty, send, edit, fetchMore }\n * data is formatted for rendering.\n */\nexport default (\n\t{ id, ...config }: UseMessagesConfig,\n\toptions: QueryDataHandler<MessageModelDocument> = {}\n) => {\n\tconst { messagesPath: path } = new Room({ id })\n\tconst [limit, setLimit] = useState(LIMIT)\n\tconst currentLimit = useRef(limit)\n\tconst latestFetchMoreId = useRef<null | string>(null)\n\tconst query = useMemo(\n\t\t() => ({\n\t\t\tlisten: true,\n\t\t\torderBy,\n\t\t\t...config,\n\t\t\tpath,\n\t\t\tlimit,\n\t\t}),\n\t\t[path, config, limit]\n\t)\n\tuseEffect(() => {\n\t\tcurrentLimit.current = limit\n\t}, [limit])\n\tconst { data, loading, error, ref } = useFuego<MessageModelDocument>(\n\t\tquery,\n\t\toptions\n\t)\n\tconst send = useCallback(\n\t\t(message: NewMessageModel[]) => {\n\t\t\treturn new Message(message as NewMessageModel[]).formatForSend().send(id)\n\t\t},\n\t\t[id]\n\t)\n\tconst edit = useCallback(\n\t\t(message: EditMessageModel) => {\n\t\t\treturn new Message(message).edit(id)\n\t\t},\n\t\t[id]\n\t)\n\tconst formattedMessages: NewMessageModel[] = useMemo(() => {\n\t\tfunction isArrayOfMessageDocuments(\n\t\t\tm: typeof data\n\t\t): m is MessageModelDocument[] {\n\t\t\treturn !!(m as MessageModelDocument[])\n\t\t}\n\t\tif (data && isArrayOfMessageDocuments(data)) {\n\t\t\tconst formatted: NewMessageModel[] = new Message(\n\t\t\t\tdata\n\t\t\t).formatForRender() as NewMessageModel[]\n\t\t\treturn formatted\n\t\t}\n\t\treturn []\n\t}, [data])\n\tconst fetchMore = () => {\n\t\tconst lastMessageId =\n\t\t\tformattedMessages[formattedMessages.length - 1] &&\n\t\t\tformattedMessages[formattedMessages.length - 1].id\n\t\t// make sure we don't fetch more if the latest message is unchanged, or if it doesn't even exist\n\t\tif (lastMessageId && lastMessageId !== latestFetchMoreId.current) {\n\t\t\tlatestFetchMoreId.current = lastMessageId\n\t\t\tsetLimit(l => l + LIMIT)\n\t\t}\n\t}\n\tconst empty: boolean = useMemo(\n\t\t() => !(formattedMessages && formattedMessages.length),\n\t\t[formattedMessages]\n\t)\n\n\tconst fetchingMore = loading && formattedMessages.length\n\n\t// TODO add reply to message function\n\n\treturn {\n\t\tdata: formattedMessages,\n\t\tloading,\n\t\terror,\n\t\tref,\n\t\tpath,\n\t\tempty,\n\t\tsend,\n\t\tedit,\n\t\tfetchMore,\n\t\tfetchingMore,\n\t}\n}\n"]}