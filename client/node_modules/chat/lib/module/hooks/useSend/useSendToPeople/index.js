import _regeneratorRuntime from"@babel/runtime/regenerator";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import{useState,useRef,useEffect,useCallback}from'react';import Message from'../../../classes/Message';export default function(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),uploading=_useState2[0],setUploading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var messageRef=useRef(null);var recipientsRef=useRef(null);useEffect(function(){if(uploading){var run=function run(){return _regeneratorRuntime.async(function run$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!(messageRef.current&&recipientsRef.current)){_context.next=4;break;}_context.next=4;return _regeneratorRuntime.awrap(new Message(messageRef.current).sendToPeople(recipientsRef.current));case 4:messageRef.current=null;recipientsRef.current=null;setUploading(false);_context.next=13;break;case 9:_context.prev=9;_context.t0=_context["catch"](0);console.error("failure sending message from useSendToPeople",_context.t0);setError(_context.t0);case 13:case"end":return _context.stop();}}},null,null,[[0,9]]);};run();}},[uploading]);var send=useCallback(function(message,recipients){messageRef.current=message;recipientsRef.current=recipients;setUploading(true);},[]);return{send:send,uploading:uploading,error:error};}
//# sourceMappingURL=index.js.map