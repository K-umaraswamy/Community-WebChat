{"version":3,"sources":["index.ts"],"names":["useState","useRef","useEffect","useCallback","Message","uploading","setUploading","error","setError","messageRef","recipientsRef","run","current","sendToPeople","console","send","message","recipients"],"mappings":"6HAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,SAA3B,CAAsCC,WAAtC,KAAyD,OAAzD,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,cAAe,WAAiD,eAC7BJ,QAAQ,CAAC,KAAD,CADqB,wCACxDK,SADwD,eAC7CC,YAD6C,8BAErCN,QAAQ,CAAC,IAAD,CAF6B,yCAExDO,KAFwD,eAEjDC,QAFiD,eAG/D,GAAMC,CAAAA,UAAU,CAAGR,MAAM,CAAsB,IAAtB,CAAzB,CACA,GAAMS,CAAAA,aAAa,CAAGT,MAAM,CAAkB,IAAlB,CAA5B,CAEAC,SAAS,CAAC,UAAM,CACf,GAAIG,SAAJ,CAAe,CACd,GAAMM,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,qIAENF,UAAU,CAACG,OAAX,EAAsBF,aAAa,CAACE,OAF9B,2EAGH,GAAIR,CAAAA,OAAJ,CAAYK,UAAU,CAACG,OAAvB,EAAgCC,YAAhC,CACLH,aAAa,CAACE,OADT,CAHG,SAMVH,UAAU,CAACG,OAAX,CAAqB,IAArB,CACAF,aAAa,CAACE,OAAd,CAAwB,IAAxB,CACAN,YAAY,CAAC,KAAD,CAAZ,CARU,+EAUVQ,OAAO,CAACP,KAAR,6DACAC,QAAQ,aAAR,CAXU,iEAAZ,CAcAG,GAAG,GACH,CACD,CAlBQ,CAkBN,CAACN,SAAD,CAlBM,CAAT,CAoBA,GAAMU,CAAAA,IAAI,CAAGZ,WAAW,CAAC,SAACa,OAAD,CAAwBC,UAAxB,CAAiD,CACzER,UAAU,CAACG,OAAX,CAAqBI,OAArB,CACAN,aAAa,CAACE,OAAd,CAAwBK,UAAxB,CACAX,YAAY,CAAC,IAAD,CAAZ,CACA,CAJuB,CAIrB,EAJqB,CAAxB,CAMA,MAAO,CAAES,IAAI,CAAJA,IAAF,CAAQV,SAAS,CAATA,SAAR,CAAmBE,KAAK,CAALA,KAAnB,CAAP,CACA","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react'\nimport { NewMessageModel } from '../../../classes/Message/types'\nimport Message from '../../../classes/Message'\n\nexport default function<MessageModel extends NewMessageModel>() {\n\tconst [uploading, setUploading] = useState(false)\n\tconst [error, setError] = useState(null)\n\tconst messageRef = useRef<MessageModel | null>(null)\n\tconst recipientsRef = useRef<string[] | null>(null)\n\n\tuseEffect(() => {\n\t\tif (uploading) {\n\t\t\tconst run = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (messageRef.current && recipientsRef.current)\n\t\t\t\t\t\tawait new Message(messageRef.current).sendToPeople(\n\t\t\t\t\t\t\trecipientsRef.current\n\t\t\t\t\t\t)\n\t\t\t\t\tmessageRef.current = null\n\t\t\t\t\trecipientsRef.current = null\n\t\t\t\t\tsetUploading(false)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(`failure sending message from useSendToPeople`, e)\n\t\t\t\t\tsetError(e)\n\t\t\t\t}\n\t\t\t}\n\t\t\trun()\n\t\t}\n\t}, [uploading])\n\n\tconst send = useCallback((message: MessageModel, recipients: string[]) => {\n\t\tmessageRef.current = message\n\t\trecipientsRef.current = recipients\n\t\tsetUploading(true)\n\t}, [])\n\n\treturn { send, uploading, error }\n}\n"]}