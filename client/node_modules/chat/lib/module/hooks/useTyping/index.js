import _regeneratorRuntime from"@babel/runtime/regenerator";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import{useEffect,useState,useMemo,useRef}from'react';import{useFuegoContext}from'@nandorojo/fuego';export default(function(_ref){var roomId=_ref.roomId,text=_ref.text,_ref$delay=_ref.delay,delay=_ref$delay===void 0?5000:_ref$delay;var _useFuegoContext=useFuegoContext(),auth=_useFuegoContext.auth,firebase=_useFuegoContext.firebase;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),ready=_useState2[0],setReady=_useState2[1];var _auth=auth(),currentUser=_auth.currentUser;try{if(!currentUser)throw new Error('ðŸ¤¯ error in useTyping hook. Looks like there is not a valid user signed in. \nConsider using the FuegoGate component from @nandorojo/fuego and wrapping it around your app.');}catch(e){console.error(e);}var _ref2=currentUser,uid=_ref2.uid;var databaseRef=useMemo(function(){return firebase.database().ref("/typing/"+uid);},[uid,firebase]);var previouslyTyped=useRef('');var timer=useRef();var lastStateSent=useRef('nothing');useEffect(function(){var subscriptionRef=firebase.database().ref('.info/connected');var notTyping={state:'nothing',lastChanged:firebase.database.ServerValue.TIMESTAMP,roomId:roomId};subscriptionRef.on('value',function _callee(snapshot){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(snapshot.val()){_context.next=2;break;}return _context.abrupt("return");case 2:_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(databaseRef.onDisconnect().set(notTyping));case 5:setReady(true);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context["catch"](2);console.error("useTyping error within snapshot listener "+_context.t0);case 11:case"end":return _context.stop();}}},null,null,[[2,8]]);});return function(){subscriptionRef.off('value');(function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;lastStateSent.current=notTyping.state;_context2.next=4;return _regeneratorRuntime.awrap(databaseRef.set(notTyping));case 4:_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2["catch"](0);console.error('useTyping errored on unmount setting not typing');case 9:case"end":return _context2.stop();}}},null,null,[[0,6]]);})();};},[roomId,databaseRef,firebase]);useEffect(function(){try{if(ready&&text!==previouslyTyped.current){previouslyTyped.current=text;var notTyping={state:'nothing',lastChanged:firebase.database.ServerValue.TIMESTAMP,roomId:roomId};var isTyping={state:'typing',lastChanged:firebase.database.ServerValue.TIMESTAMP,roomId:roomId};var setValue=text?isTyping:notTyping;if(setValue.state!==lastStateSent.current){lastStateSent.current=setValue.state;databaseRef.set(setValue);}if(delay!==null&&setValue.state==='typing'){timer.current=setTimeout(function(){lastStateSent.current=notTyping.state;databaseRef.set(notTyping);},delay);}}}catch(e){console.error('error in useTyping after timer',e);}return function(){if(timer.current)clearTimeout(timer.current);};},[ready,text,roomId,delay,uid,databaseRef,firebase]);});
//# sourceMappingURL=index.js.map