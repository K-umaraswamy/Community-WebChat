{"version":3,"sources":["index.tsx"],"names":["React","StyleSheet","SafeAreaView","ButtonComponent","Input","props","renderButton","button","Component","text","Math","random","renderButtons","styles","buttons","map","index","ready","loading","buttonProps","backgroundColor","color","disabledColor","onPress","selected","textColor","disabledTextColor","maybeRenderInput","enableTextInput","showInputWhenNotReady","onChangeText","inputProps","inputContainerStyle","inputStyle","create","flexDirection"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,YAArB,KAAyC,cAAzC,CAEA,MAAOC,CAAAA,eAAP,KAA4B,UAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,cAAe,UAASC,KAAT,CAAwC,CACtD,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAAiD,CAChD,GAAIF,KAAK,CAACC,YAAN,GAAuB,IAA3B,CAAiC,MAAO,KAAP,CACjC,GAAID,KAAK,CAACC,YAAV,CAAwB,MAAOD,CAAAA,KAAK,CAACC,YAAN,CAAmBC,MAAnB,CAAP,CAExB,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACF,eAAN,EAAyBA,eAA3C,CAEA,MAAO,qBAAC,SAAD,WAAW,GAAG,IAAKI,MAAM,CAACE,IAAZ,CAAmBC,IAAI,CAACC,MAAL,EAAjC,EAAsDJ,MAAtD,mDAAP,CACA,CACD,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC3B,MACC,qBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACC,OAA5B,iDACET,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAkB,SAACR,MAAD,CAASS,KAAT,CAAmB,CACrC,GAAMC,CAAAA,KAAK,CAAGZ,KAAK,CAACY,KAApB,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAC,CAACX,MAAM,CAACW,OAAzB,CACA,GAAMC,CAAAA,WAA8B,CAAG,CACtCC,eAAe,CAAEH,KAAK,CACnBV,MAAM,CAACc,KAAP,EAAgB,MADG,CAEnBd,MAAM,CAACe,aAAP,EAAwB,WAHW,CAItCb,IAAI,CAAEF,MAAM,CAACE,IAJyB,CAKtCc,OAAO,CAAE,yBACRhB,CAAAA,MAAM,CAACgB,OAAP,CAAe,CACdC,QAAQ,CAAEnB,KAAK,CAACmB,QADF,CAEdP,KAAK,CAALA,KAFc,CAGdC,OAAO,CAAPA,OAHc,CAIdT,IAAI,CAAEJ,KAAK,CAACI,IAAN,EAAc,EAJN,CAAf,CADQ,EAL6B,CAYtCgB,SAAS,CACR,CAACR,KAAK,CAAGV,MAAM,CAACkB,SAAV,CAAsBlB,MAAM,CAACmB,iBAAnC,GAAyD,OAbpB,CActCT,KAAK,CAALA,KAdsC,CAetCD,KAAK,CAALA,KAfsC,CAgBtCE,OAAO,CAAPA,OAhBsC,CAAvC,CAmBA,MAAOZ,CAAAA,YAAY,CAACa,WAAD,CAAnB,CACA,CAvBA,CADF,CADD,CA4BA,CA7BD,CA8BA,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC9B,GAAI,CAACtB,KAAK,CAACuB,eAAX,CAA4B,MAAO,KAAP,CAC5B,GAAI,CAACvB,KAAK,CAACY,KAAP,EAAgB,CAACZ,KAAK,CAACwB,qBAA3B,CAAkD,MAAO,KAAP,CAElD,MACC,qBAAC,KAAD,EACC,IAAI,CAAExB,KAAK,CAACI,IADb,CAEC,YAAY,CAAEJ,KAAK,CAACyB,YAFrB,CAGC,UAAU,CAAEzB,KAAK,CAAC0B,UAHnB,CAIC,mBAAmB,CAAE1B,KAAK,CAAC2B,mBAJ5B,CAKC,UAAU,CAAE3B,KAAK,CAAC4B,UALnB,iDADD,CASA,CAbD,CAcA,MACC,yCACEN,gBAAgB,EADlB,CAEEf,aAAa,EAFf,CADD,CAMA,CAED,GAAMC,CAAAA,MAAM,CAAGZ,UAAU,CAACiC,MAAX,CAAkB,CAChCpB,OAAO,CAAE,CACRqB,aAAa,CAAE,KADP,CADuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, SafeAreaView } from 'react-native'\nimport { RoomCreatorFooterProps, RenderButtonProps } from '../../types'\nimport ButtonComponent from './Button'\nimport Input from './Input'\n\nexport default function(props: RoomCreatorFooterProps) {\n\tfunction renderButton(button: RenderButtonProps) {\n\t\tif (props.renderButton === null) return null\n\t\tif (props.renderButton) return props.renderButton(button)\n\n\t\tconst Component = props.ButtonComponent || ButtonComponent\n\n\t\treturn <Component key={`${button.text}${Math.random()}`} {...button} />\n\t}\n\tconst renderButtons = () => {\n\t\treturn (\n\t\t\t<SafeAreaView style={styles.buttons}>\n\t\t\t\t{props.buttons.map((button, index) => {\n\t\t\t\t\tconst ready = props.ready\n\t\t\t\t\tconst loading = !!button.loading\n\t\t\t\t\tconst buttonProps: RenderButtonProps = {\n\t\t\t\t\t\tbackgroundColor: ready\n\t\t\t\t\t\t\t? button.color || 'blue'\n\t\t\t\t\t\t\t: button.disabledColor || 'lightgray',\n\t\t\t\t\t\ttext: button.text,\n\t\t\t\t\t\tonPress: () =>\n\t\t\t\t\t\t\tbutton.onPress({\n\t\t\t\t\t\t\t\tselected: props.selected,\n\t\t\t\t\t\t\t\tready,\n\t\t\t\t\t\t\t\tloading,\n\t\t\t\t\t\t\t\ttext: props.text || ''\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\ttextColor:\n\t\t\t\t\t\t\t(ready ? button.textColor : button.disabledTextColor) || 'white',\n\t\t\t\t\t\tready,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tloading\n\t\t\t\t\t}\n\n\t\t\t\t\treturn renderButton(buttonProps)\n\t\t\t\t})}\n\t\t\t</SafeAreaView>\n\t\t)\n\t}\n\tconst maybeRenderInput = () => {\n\t\tif (!props.enableTextInput) return null\n\t\tif (!props.ready && !props.showInputWhenNotReady) return null\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\ttext={props.text}\n\t\t\t\tonChangeText={props.onChangeText}\n\t\t\t\tinputProps={props.inputProps}\n\t\t\t\tinputContainerStyle={props.inputContainerStyle}\n\t\t\t\tinputStyle={props.inputStyle}\n\t\t\t/>\n\t\t)\n\t}\n\treturn (\n\t\t<>\n\t\t\t{maybeRenderInput()}\n\t\t\t{renderButtons()}\n\t\t</>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tbuttons: {\n\t\tflexDirection: 'row'\n\t}\n})\n"]}