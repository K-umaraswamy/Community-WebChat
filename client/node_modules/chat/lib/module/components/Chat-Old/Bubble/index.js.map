{"version":3,"sources":["index.tsx"],"names":["React","useMemo","View","Text","StyleSheet","Bubble","props","containerStyles","styles","container","isMe","meStyles","otherStyles","style","textStyles","text","bubbleRef","create","paddingHorizontal","paddingVertical","borderRadius","textAlign","backgroundColor","color"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAAkD,OAAlD,CAEA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,UAArB,KAAuC,cAAvC,CAEA,GAAMC,CAAAA,MAAsC,CAAG,QAAzCA,CAAAA,MAAyC,CAAAC,KAAK,CAAI,CACvD,GAAMC,CAAAA,eAAe,CAAGN,OAAO,CAC9B,iBAAM,CACLO,MAAM,CAACC,SADF,CAELH,KAAK,CAACI,IAAN,CAAaC,QAAQ,CAACF,SAAtB,CAAkCG,WAAW,CAACH,SAFzC,CAGLH,KAAK,CAACO,KAHD,CAAN,EAD8B,CAM9B,CAACP,KAAK,CAACO,KAAP,CAAcP,KAAK,CAACI,IAApB,CAN8B,CAA/B,CAQA,GAAMI,CAAAA,UAAU,CAAGb,OAAO,CACzB,iBAAM,CACLO,MAAM,CAACO,IADF,CAELT,KAAK,CAACI,IAAN,CAAaC,QAAQ,CAACI,IAAtB,CAA6BH,WAAW,CAACG,IAFpC,CAGLT,KAAK,CAACO,KAHD,CAAN,EADyB,CAMzB,CAACP,KAAK,CAACO,KAAP,CAAcP,KAAK,CAACI,IAApB,CANyB,CAA1B,CAQA,MACC,qBAAC,IAAD,EAAM,KAAK,CAAEH,eAAb,CAA8B,GAAG,CAAED,KAAK,CAACU,SAAzC,iDACC,oBAAC,IAAD,EAAM,KAAK,CAAEF,UAAb,iDAA0BR,KAAK,CAACS,IAAhC,CADD,CADD,CAKA,CAtBD,CAwBA,cAAeV,CAAAA,MAAf,CAEA,GAAMG,CAAAA,MAAM,CAAGJ,UAAU,CAACa,MAAX,CAAkB,CAChCR,SAAS,CAAE,CACVS,iBAAiB,CAAE,EADT,CAEVC,eAAe,CAAE,CAFP,CAGVC,YAAY,CAAE,EAHJ,CADqB,CAMhCL,IAAI,CAAE,CACLM,SAAS,CAAE,MADN,CAN0B,CAAlB,CAAf,CAWA,GAAMV,CAAAA,QAAQ,CAAGP,UAAU,CAACa,MAAX,CAAkB,CAClCR,SAAS,CAAE,CACVa,eAAe,CAAE,MADP,CADuB,CAIlCP,IAAI,CAAE,CACLQ,KAAK,CAAE,OADF,CAJ4B,CAAlB,CAAjB,CASA,GAAMX,CAAAA,WAAW,CAAGR,UAAU,CAACa,MAAX,CAAkB,CACrCR,SAAS,CAAE,CACVa,eAAe,CAAE,WADP,CAD0B,CAIrCP,IAAI,CAAE,CACLQ,KAAK,CAAE,OADF,CAJ+B,CAAlB,CAApB","sourcesContent":["import React, { useMemo, FunctionComponent } from 'react'\nimport { BubbleProps } from '../types'\nimport { View, Text, StyleSheet } from 'react-native'\n\nconst Bubble: FunctionComponent<BubbleProps> = props => {\n\tconst containerStyles = useMemo(\n\t\t() => [\n\t\t\tstyles.container,\n\t\t\tprops.isMe ? meStyles.container : otherStyles.container,\n\t\t\tprops.style\n\t\t],\n\t\t[props.style, props.isMe]\n\t)\n\tconst textStyles = useMemo(\n\t\t() => [\n\t\t\tstyles.text,\n\t\t\tprops.isMe ? meStyles.text : otherStyles.text,\n\t\t\tprops.style\n\t\t],\n\t\t[props.style, props.isMe]\n\t)\n\treturn (\n\t\t<View style={containerStyles} ref={props.bubbleRef}>\n\t\t\t<Text style={textStyles}>{props.text}</Text>\n\t\t</View>\n\t)\n}\n\nexport default Bubble\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpaddingHorizontal: 10,\n\t\tpaddingVertical: 5,\n\t\tborderRadius: 10\n\t},\n\ttext: {\n\t\ttextAlign: 'left'\n\t}\n})\n\nconst meStyles = StyleSheet.create({\n\tcontainer: {\n\t\tbackgroundColor: 'blue'\n\t},\n\ttext: {\n\t\tcolor: 'white'\n\t}\n})\n\nconst otherStyles = StyleSheet.create({\n\tcontainer: {\n\t\tbackgroundColor: 'lightgray'\n\t},\n\ttext: {\n\t\tcolor: 'black'\n\t}\n})\n"]}