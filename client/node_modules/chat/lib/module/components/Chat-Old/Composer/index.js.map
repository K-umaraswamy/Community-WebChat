{"version":3,"sources":["index.tsx"],"names":["React","useState","useCallback","useMemo","uuid","View","StyleSheet","Input","Send","emptyMedia","memo","props","initialText","textState","setText","text","onInputTextChanged","onChangeText","mediaState","setMedia","media","onChangeMedia","textInputProps","renderTextInput","renderInput","inputProps","containerStyle","inputContainerStyle","placeholderColor","placeholderText","style","inputStyle","tintColor","inputRef","user","messagesReadyToSend","messages","length","forEach","item","message","id","v4","createdAt","Date","push","trim","onSend","send","renderSendButton","sendButtonMode","renderSend","mode","empty","withText","sendProps","styles","wrapper","create","container","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react'\nimport uuid from 'uuid'\nimport { View, StyleSheet } from 'react-native'\nimport { ComposerProps, InputProps, SendButtonProps, ChatProps } from '../types'\nimport Input from './Input'\nimport { MessageMedia, NewMessageModel, MessageMediaWithUri } from '../../../classes/Message/types'\nimport Send from './Send'\n\nconst emptyMedia: Omit<MessageMedia, 'url'>[] = []\n\nexport default React.memo((props: ComposerProps) => {\n\t// First, we set up a state manager for the composer's text.\n\tconst [textState, setText] = useState(props.initialText || '')\n\t// if you pass a text prop, use that state instead\n\tconst [text, onChangeText] = [\n\t\tprops.text || textState,\n\t\t(props.text && props.onInputTextChanged) || setText\n\t]\n\n\tconst [mediaState, setMedia] = useState<MessageMediaWithUri[]>(emptyMedia)\n\tconst [media, onChangeMedia] = [\n\t\tprops.media || mediaState,\n\t\t(props.media && props.onChangeMedia) || setMedia\n\t]\n\n\tconst { textInputProps, renderTextInput } = props\n\tconst renderInput = useCallback(() => {\n\t\tif (renderTextInput === null) return null\n\n\t\tconst inputProps: InputProps = {\n\t\t\tinputProps: textInputProps,\n\t\t\tonChangeText,\n\t\t\ttext,\n\t\t\tcontainerStyle: props.inputContainerStyle,\n\t\t\tplaceholderColor: props.placeholderColor,\n\t\t\tplaceholderText: props.placeholderText,\n\t\t\tstyle: props.inputStyle,\n\t\t\ttintColor: props.tintColor,\n\t\t\tinputRef: props.inputRef\n\t\t}\n\n\t\tif (renderTextInput) return renderTextInput(inputProps)\n\n\t\treturn <Input {...inputProps} />\n\t}, [\n\t\tonChangeText,\n\t\ttext,\n\t\ttextInputProps,\n\t\trenderTextInput,\n\t\tprops.inputContainerStyle,\n\t\tprops.placeholderColor,\n\t\tprops.placeholderText,\n\t\tprops.inputStyle,\n\t\tprops.tintColor,\n\t\t// TODO leave or take out?\n\t\tprops.inputRef\n\t])\n\n\tconst { user } = props\n\tconst messagesReadyToSend = useMemo(() => {\n\t\tconst messages: NewMessageModel[] = []\n\t\tif (media.length) {\n\t\t\t;(media as MessageMedia[]).forEach(item => {\n\t\t\t\tconst message: NewMessageModel = {\n\t\t\t\t\tuser,\n\t\t\t\t\ttext: '',\n\t\t\t\t\tid: uuid.v4(),\n\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\tmedia: item\n\t\t\t\t}\n\t\t\t\tmessages.push(message)\n\t\t\t})\n\t\t}\n\t\tif (text) {\n\t\t\tconst message: NewMessageModel = {\n\t\t\t\tuser,\n\t\t\t\ttext: text && text.trim(),\n\t\t\t\tid: uuid.v4(),\n\t\t\t\tcreatedAt: new Date()\n\t\t\t}\n\t\t\tmessages.push(message)\n\t\t}\n\t\treturn messages\n\t}, [user, text, media])\n\n\tconst { onSend } = props\n\tconst send = useCallback(() => {\n\t\tif (messagesReadyToSend.length) {\n\t\t\tonChangeText('')\n\t\t\tonChangeMedia([])\n\t\t\tonSend(messagesReadyToSend)\n\t\t}\n\t}, [onChangeText, onChangeMedia, messagesReadyToSend, onSend])\n\n\tconst { renderSendButton, sendButtonMode } = props\n\tconst renderSend = useCallback(() => {\n\t\tif (renderSendButton === null) return null\n\n\t\tconst mode: ChatProps['sendButtonMode'] = {\n\t\t\tempty: 'hidden',\n\t\t\twithText: 'icon',\n\t\t\t...(sendButtonMode || {})\n\t\t}\n\t\tconst sendProps: SendButtonProps = {\n\t\t\tonSend: send,\n\t\t\ttext,\n\t\t\tmedia,\n\t\t\tuser,\n\t\t\tmode: (text && text.trim ? mode.withText : mode.empty) || 'icon'\n\t\t}\n\t\tif (renderSendButton) return renderSendButton(sendProps)\n\n\t\treturn <Send {...sendProps} />\n\t}, [send, text, user, media, renderSendButton, sendButtonMode])\n\n\treturn (\n\t\t<View style={props.containerStyle}>\n\t\t\t<View style={styles.wrapper}>\n\t\t\t\t{renderInput()}\n\t\t\t\t{renderSend()}\n\t\t\t</View>\n\t\t</View>\n\t)\n})\n\nconst styles = StyleSheet.create({\n\tcontainer: {},\n\twrapper: {\n\t\tflexDirection: 'row'\n\t}\n})\n"]}