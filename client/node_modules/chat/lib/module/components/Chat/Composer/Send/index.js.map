{"version":3,"sources":["index.tsx"],"names":["React","useCallback","Button","StyleSheet","TouchableOpacity","View","Ionicons","Send","props","mode","containerStyle","Container","children","style","styles","container","onSend","button","backgroundColor","tintColor","size","memo","create","paddingRight","paddingBottom","borderRadius","height","width","justifyContent","alignItems"],"mappings":"+8BAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,MAAT,CAAiBC,UAAjB,CAA6BC,gBAA7B,CAA+CC,IAA/C,KAA2D,cAA3D,CACA,OAASC,QAAT,KAAyB,oBAAzB,CAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAA4B,CACxC,GAAIA,KAAK,CAACC,IAAN,GAAe,QAAnB,CAA6B,MAAO,KAAP,CADW,GAEhCC,CAAAA,cAFgC,CAEbF,KAFa,CAEhCE,cAFgC,CAGxC,GAAMC,CAAAA,SAAS,CAAGV,WAAW,CAC5B,cAAkB,IAAfW,CAAAA,QAAe,MAAfA,QAAe,CACjB,GAAMC,CAAAA,KAAK,kBACPC,MAAM,CAACC,SADA,IAENL,cAAc,EAAI,EAFZ,CAAX,CAIA,MAAO,qBAAC,IAAD,EAAM,KAAK,CAAEG,KAAb,iDAAqBD,QAArB,CAAP,CACA,CAP2B,CAQ5B,CAACF,cAAD,CAR4B,CAA7B,CAUA,GAAIF,KAAK,CAACC,IAAN,GAAe,MAAnB,CACC,MACC,qBAAC,SAAD,kDACC,oBAAC,gBAAD,EAAkB,OAAO,CAAED,KAAK,CAACQ,MAAjC,CAAyC,KAAK,CAAE,CAACF,MAAM,CAACG,MAAR,CAAgB,CAAEC,eAAe,CAAEV,KAAK,CAACW,SAAN,EAAmB,MAAtC,CAAhB,CAAhD,iDACC,oBAAC,QAAD,EAAU,IAAI,CAAC,oBAAf,CAAoC,IAAI,CAAEC,IAAI,CAAG,GAAjD,CAAsD,KAAK,CAAE,OAA7D,iDADD,CADD,CADD,CAOD,MACC,qBAAC,SAAD,kDACC,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,OAAO,CAAEZ,KAAK,CAACQ,MAApC,CAA4C,KAAK,CAAER,KAAK,CAACW,SAAN,EAAmB,MAAtE,iDADD,CADD,CAKA,CA1BD,CA4BA,cAAenB,CAAAA,KAAK,CAACqB,IAAN,CAAWd,IAAX,CAAf,CAEA,GAAMa,CAAAA,IAAI,CAAG,EAAb,CAEA,GAAMN,CAAAA,MAAM,CAAGX,UAAU,CAACmB,MAAX,CAAkB,CAChCP,SAAS,CAAE,CACVQ,YAAY,CAAE,CADJ,CAEVC,aAAa,CAAE,CAFL,CADqB,CAKhCP,MAAM,CAAE,CACPQ,YAAY,CAAEL,IADP,CAEPM,MAAM,CAAEN,IAAI,CAAG,GAFR,CAGPO,KAAK,CAAEP,IAAI,CAAG,GAHP,CAIPQ,cAAc,CAAE,QAJT,CAKPC,UAAU,CAAE,QALL,CALwB,CAAlB,CAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { Button, StyleSheet, TouchableOpacity, View } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { SendButtonProps } from '../../types'\n\nconst Send = (props: SendButtonProps) => {\n\tif (props.mode === 'hidden') return null\n\tconst { containerStyle } = props\n\tconst Container = useCallback(\n\t\t({ children }) => {\n\t\t\tconst style = {\n\t\t\t\t...styles.container,\n\t\t\t\t...(containerStyle || {}),\n\t\t\t}\n\t\t\treturn <View style={style}>{children}</View>\n\t\t},\n\t\t[containerStyle],\n\t)\n\tif (props.mode === 'icon')\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<TouchableOpacity onPress={props.onSend} style={[styles.button, { backgroundColor: props.tintColor || 'blue' }]}>\n\t\t\t\t\t<Ionicons name=\"ios-arrow-round-up\" size={size * 1.5} color={'white'} />\n\t\t\t\t</TouchableOpacity>\n\t\t\t</Container>\n\t\t)\n\treturn (\n\t\t<Container>\n\t\t\t<Button title=\"Send\" onPress={props.onSend} color={props.tintColor || 'blue'} />\n\t\t</Container>\n\t)\n}\n\nexport default React.memo(Send)\n\nconst size = 20\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpaddingRight: 5,\n\t\tpaddingBottom: 5,\n\t},\n\tbutton: {\n\t\tborderRadius: size,\n\t\theight: size * 1.5,\n\t\twidth: size * 1.5,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\t// padding: size / 2\n\t},\n})\n"]}