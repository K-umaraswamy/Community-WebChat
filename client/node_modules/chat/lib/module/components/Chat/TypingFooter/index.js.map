{"version":3,"sources":["index.tsx"],"names":["React","useMemo","StyleSheet","View","Text","TypingIndicator","memo","typingText","containerStyle","numberOfUsersTyping","indicatorProps","extension","styles","container","wrapper","text","create","alignItems","padding","paddingBottom","flexDirection","color","fontStyle","marginLeft"],"mappings":"yPAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,IAA3B,KAAuC,cAAvC,CAGA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CAEA,cAAeL,CAAAA,KAAK,CAACM,IAAN,CACd,cAKyB,IAJxBC,CAAAA,UAIwB,MAJxBA,UAIwB,CAHxBC,cAGwB,MAHxBA,cAGwB,CAFxBC,mBAEwB,MAFxBA,mBAEwB,CADrBC,cACqB,sFACxB,GAAMC,CAAAA,SAAS,CAAGV,OAAO,CAAC,UAAM,CAC/B,GAAI,CAACQ,mBAAL,CAA0B,MAAO,EAAP,CAC1B,MAAOA,CAAAA,mBAAmB,CAAG,CAAtB,CAA0B,KAA1B,CAAkC,IAAzC,CACA,CAHwB,CAGtB,CAACA,mBAAD,CAHsB,CAAzB,CAIA,MACC,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACG,MAAM,CAACC,SAAR,CAAmBL,cAAnB,CAAb,iDACC,oBAAC,IAAD,EAAM,KAAK,CAAEI,MAAM,CAACE,OAApB,iDACC,oBAAC,eAAD,aAAqBJ,cAArB,mDADD,CAEE,CAAC,CAACH,UAAF,EAAgB,CAAC,CAACE,mBAAlB,EACA,oBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACG,IAApB,iDACER,UADF,KACeI,SADf,cAHF,CADD,CADD,CAYA,CAvBa,CAAf,CA0BA,GAAMC,CAAAA,MAAM,CAAGV,UAAU,CAACc,MAAX,CAAkB,CAChCH,SAAS,CAAE,CACVI,UAAU,CAAE,YADF,CAEVC,OAAO,CAAE,EAFC,CAGVC,aAAa,CAAE,CAHL,CADqB,CAMhCL,OAAO,CAAE,CACRM,aAAa,CAAE,KADP,CAERH,UAAU,CAAE,QAFJ,CANuB,CAUhCF,IAAI,CAAE,CACLM,KAAK,CAAE,MADF,CAELC,SAAS,CAAE,QAFN,CAGLC,UAAU,CAAE,EAHP,CAV0B,CAAlB,CAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\n// import Juice from 'usechat'\nimport { TypingFooterProps } from '../types'\nimport TypingIndicator from '../../TypingIndicator'\n\nexport default React.memo(\n\t({\n\t\ttypingText,\n\t\tcontainerStyle,\n\t\tnumberOfUsersTyping,\n\t\t...indicatorProps\n\t}: TypingFooterProps) => {\n\t\tconst extension = useMemo(() => {\n\t\t\tif (!numberOfUsersTyping) return ''\n\t\t\treturn numberOfUsersTyping > 1 ? 'are' : 'is'\n\t\t}, [numberOfUsersTyping])\n\t\treturn (\n\t\t\t<View style={[styles.container, containerStyle]}>\n\t\t\t\t<View style={styles.wrapper}>\n\t\t\t\t\t<TypingIndicator {...indicatorProps} />\n\t\t\t\t\t{!!typingText && !!numberOfUsersTyping && (\n\t\t\t\t\t\t<Text style={styles.text}>\n\t\t\t\t\t\t\t{typingText} {extension} typing...\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\n\t}\n)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: 'flex-start',\n\t\tpadding: 10,\n\t\tpaddingBottom: 5\n\t},\n\twrapper: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'center'\n\t},\n\ttext: {\n\t\tcolor: 'gray',\n\t\tfontStyle: 'italic',\n\t\tmarginLeft: 10\n\t}\n})\n"]}