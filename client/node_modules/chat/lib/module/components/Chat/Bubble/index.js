import _extends from"@babel/runtime/helpers/extends";import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";var _jsxFileName="/Users/Fernando/Developer/Learning Babel/usechat/src/components/Chat/Bubble/index.tsx";import React,{useMemo,useCallback}from'react';import{View,Text,StyleSheet}from'react-native';import{LinearGradient}from'expo-linear-gradient';import Media from'../Media';var isValidColor=function isValidColor(color){return /(#(?:[0-9a-f]{ 2 }){ 2,4 }|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[d\.]+%?\)|\b(transparent|black|silver|gray|whitesmoke|maroon|red|purple|fuchsia|green|lime|olivedrab|yellow|navy|blue|teal|aquamarine|orange|aliceblue|antiquewhite|aqua|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|goldenrod|gold|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavenderblush|lavender|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olive|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|white|yellowgreen|rebeccapurple)\b)/i.test(color);};var Bubble=function Bubble(props){var containerStyles=useMemo(function(){return[styles.container,props.isMe?meStyles.container:otherStyles.container,props.style];},[props.style,props.isMe]);var textStyles=useMemo(function(){var color=props.textColor&&{color:props.textColor}||{};return[styles.text,props.isMe?meStyles.text:otherStyles.text,color,props.textStyle];},[props.textStyle,props.isMe,props.textColor]);var backgroundColor=useMemo(function(){var color=[];if(Array.isArray(props.backgroundColor)){color=props.backgroundColor;}if(typeof props.backgroundColor==='string'){color=[props.backgroundColor,props.backgroundColor];}var invalidColors=_toConsumableArray(Array.from(new Set(color.filter(function(color){return!isValidColor(color);}))));if(invalidColors.length){console.warn("\uD83C\uDF4F Juice warning: The background color value you gave to the Bubble component doesn't seem to be valid. Each color should be a HEX color or CSS color string, matching this format: #abc123, but instead, it got these: "+invalidColors+", which don't match the format. If you gave a valid CSS color and it works, you can ignore this.");}return color||(props.isMe?['#7B16FF','#7114EA']:['#f1f7f8','#f8f8f8']);},[props.backgroundColor,props.isMe]);var propsRenderMedia=props.renderMedia;var renderMedia=useCallback(function(){if(propsRenderMedia===null)return null;if(!props.mediaContentType)return null;var media={url:props.mediaUrl||'',uri:props.mediaUri,height:props.mediaHeight||0,width:props.mediaWidth||0,contentType:props.mediaContentType};if(propsRenderMedia)return propsRenderMedia({media:media});return React.createElement(Media,_extends({},media,{__source:{fileName:_jsxFileName,lineNumber:68}}));},[props.mediaUrl,props.mediaUri,props.mediaHeight,props.mediaWidth,props.mediaContentType,propsRenderMedia]);var text=props.text,propsRenderText=props.renderText;var renderText=useCallback(function(){if(text){if(propsRenderText)return propsRenderText({style:textStyles,text:text});return React.createElement(Text,{style:textStyles,__source:{fileName:_jsxFileName,lineNumber:82}},text);}return null;},[textStyles,text,propsRenderText]);return React.createElement(View,{style:containerStyles,ref:props.bubbleRef,__source:{fileName:_jsxFileName,lineNumber:88}},React.createElement(LinearGradient,{colors:backgroundColor,start:[0.1,0.1],end:[0.9,0.9],style:styles.gradient,__source:{fileName:_jsxFileName,lineNumber:89}},renderMedia(),renderText()));};export default React.memo(Bubble);var styles=StyleSheet.create({container:{maxWidth:'80%',borderRadius:20,overflow:'hidden'},text:{textAlign:'left',fontSize:16,paddingHorizontal:12,paddingVertical:10},gradient:{flex:1}});var meStyles=StyleSheet.create({container:{marginLeft:5},text:{color:'white'}});var otherStyles=StyleSheet.create({container:{marginRight:5},text:{color:'black'}});
//# sourceMappingURL=index.js.map