{"version":3,"sources":["index.tsx"],"names":["React","View","Text","StyleSheet","LinearGradient","Indicator","props","show","size","showCount","justifyContent","position","characterCount","unreadCount","toString","length","width","opacity","BackgroundComponent","type","styles","container","background","backgroundColor","height","borderRadius","backgroundStyle","gradientProps","colors","text","textStyle","textColor","color","create","alignItems","overflow","memo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet, ViewStyle } from 'react-native'\nimport { UnreadIndicatorProps } from '../../types'\nimport { LinearGradient } from 'expo-linear-gradient'\n\nconst Indicator = (props: UnreadIndicatorProps) => {\n\tif (!props.show) return null\n\n\tlet size = props.size || (props.showCount ? 20 : 15)\n\n\t// set vertical position\n\tlet justifyContent = 'center'\n\tif (props.position === 'bottom') justifyContent = 'flex-end'\n\tif (props.position === 'top') justifyContent = 'flex-start'\n\n\t// determine width\n\tconst characterCount =\n\t\t(props.unreadCount && props.unreadCount.toString().length) || 1\n\n\tlet width = size\n\tif (props.showCount && characterCount === 2) width = size * 1.1\n\telse if (props.showCount && characterCount === 3) width = size * 1.5\n\n\t// indicator should be invisible if the count is 0, no?\n\tconst opacity = props.unreadCount ? 1 : 0\n\n\t// if it's a gradient, set the gradient as the component\n\tconst BackgroundComponent = props.type === 'gradient' ? LinearGradient : View\n\n\treturn (\n\t\t<View\n\t\t\tstyle={[\n\t\t\t\tstyles.container,\n\t\t\t\t{\n\t\t\t\t\tjustifyContent,\n\t\t\t\t\twidth: props.showCount ? size * 1.5 : size,\n\t\t\t\t\topacity\n\t\t\t\t} as ViewStyle\n\t\t\t]}\n\t\t>\n\t\t\t<BackgroundComponent\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.background,\n\t\t\t\t\t{\n\t\t\t\t\t\tbackgroundColor: props.backgroundColor,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight: size,\n\t\t\t\t\t\tborderRadius: size / 2\n\t\t\t\t\t},\n\t\t\t\t\tprops.backgroundStyle || {}\n\t\t\t\t]}\n\t\t\t\t{...(props.gradientProps || {\n\t\t\t\t\tcolors: ['red', 'blue']\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={[\n\t\t\t\t\t\tstyles.text,\n\t\t\t\t\t\tprops.textStyle || {},\n\t\t\t\t\t\tprops.textColor ? { color: props.textColor } : {}\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{!!props.showCount && (props.unreadCount || '')}\n\t\t\t\t</Text>\n\t\t\t</BackgroundComponent>\n\t\t</View>\n\t)\n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: 'center'\n\t},\n\tbackground: {\n\t\toverflow: 'hidden',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tbackgroundColor: 'blue'\n\t},\n\ttext: {\n\t\tcolor: 'white'\n\t}\n})\n\nexport default React.memo(Indicator)\n"]}