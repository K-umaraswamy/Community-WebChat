var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as v1 from './FileIconSet/v1';
import * as v2 from './FileIconSet/v2';
import { archiveFileTypes, codeFileTypes, excelMimeTypes, powerpointMimeTypes, wordMimeTypes, } from './mimeTypes';
function generateMimeTypeToIconMap(_a) {
    var FilePdfIcon = _a.FilePdfIcon, FileWordIcon = _a.FileWordIcon, FileExcelIcon = _a.FileExcelIcon, FilePowerPointIcon = _a.FilePowerPointIcon, FileArchiveIcon = _a.FileArchiveIcon, FileCodeIcon = _a.FileCodeIcon;
    var mimeTypeToIconMap = {
        'application/pdf': FilePdfIcon,
    };
    for (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {
        var type = wordMimeTypes_1[_i];
        mimeTypeToIconMap[type] = FileWordIcon;
    }
    for (var _b = 0, excelMimeTypes_1 = excelMimeTypes; _b < excelMimeTypes_1.length; _b++) {
        var type = excelMimeTypes_1[_b];
        mimeTypeToIconMap[type] = FileExcelIcon;
    }
    for (var _c = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _c < powerpointMimeTypes_1.length; _c++) {
        var type = powerpointMimeTypes_1[_c];
        mimeTypeToIconMap[type] = FilePowerPointIcon;
    }
    for (var _d = 0, archiveFileTypes_1 = archiveFileTypes; _d < archiveFileTypes_1.length; _d++) {
        var type = archiveFileTypes_1[_d];
        mimeTypeToIconMap[type] = FileArchiveIcon;
    }
    for (var _e = 0, codeFileTypes_1 = codeFileTypes; _e < codeFileTypes_1.length; _e++) {
        var type = codeFileTypes_1[_e];
        mimeTypeToIconMap[type] = FileCodeIcon;
    }
    return mimeTypeToIconMap;
}
function generateGeneralTypeToIconMap(_a) {
    var FileAudioIcon = _a.FileAudioIcon, FileVideoIcon = _a.FileVideoIcon, FileImageIcon = _a.FileImageIcon, FileAltIcon = _a.FileAltIcon;
    return {
        'audio/': FileAudioIcon,
        'video/': FileVideoIcon,
        'image/': FileImageIcon,
        'text/': FileAltIcon,
    };
}
export var iconMap = {
    '1': {
        standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
            FilePdfIcon: v1.FilePdfIcon,
            FileWordIcon: v1.FileWordIcon,
            FileExcelIcon: v1.FileExcelIcon,
            FilePowerPointIcon: v1.FilePowerPointIcon,
            FileArchiveIcon: v1.FileArchiveIcon,
            FileCodeIcon: v1.FileCodeIcon,
        })), generateGeneralTypeToIconMap({
            FileAltIcon: v1.FileAltIcon,
            FileAudioIcon: v1.FileAudioIcon,
            FileImageIcon: v1.FileImageIcon,
            FileVideoIcon: v1.FileVideoIcon,
        })), { fallback: v1.FileFallbackIcon }),
        alt: {},
    },
    '2': {
        alt: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
            FilePdfIcon: v2.FilePdfIcon,
            FileWordIcon: v2.FileWordIconAlt,
            FileExcelIcon: v2.FileExcelIconAlt,
            FilePowerPointIcon: v2.FilePowerPointIconAlt,
            FileArchiveIcon: v2.FileArchiveIconAlt,
            FileCodeIcon: v2.FileCodeIconAlt,
        })), generateGeneralTypeToIconMap({
            FileAltIcon: v2.FileFallbackIcon,
            FileAudioIcon: v2.FileAudioIconAlt,
            FileImageIcon: v2.FileImageIcon,
            FileVideoIcon: v2.FileVideoIconAlt,
        })), { fallback: v2.FileFallbackIcon }),
        standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
            FilePdfIcon: v2.FilePdfIcon,
            FileWordIcon: v2.FileWordIcon,
            FileExcelIcon: v2.FileExcelIcon,
            FilePowerPointIcon: v2.FilePowerPointIcon,
            FileArchiveIcon: v2.FileArchiveIcon,
            FileCodeIcon: v2.FileCodeIcon,
        })), generateGeneralTypeToIconMap({
            FileAltIcon: v2.FileFallbackIcon,
            FileAudioIcon: v2.FileAudioIcon,
            FileImageIcon: v2.FileImageIcon,
            FileVideoIcon: v2.FileVideoIcon,
        })), { fallback: v2.FileFallbackIcon }),
    },
};
