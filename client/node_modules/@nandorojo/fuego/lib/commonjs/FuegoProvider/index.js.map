{"version":3,"sources":["index.tsx"],"names":["FuegoProvider","fuego","children","listeners","addListener","name","listener","current","numberOfListeners","Object","keys","filter","length","console","warn","removeListener","listenerExists","doesListenerExist","getListener","value"],"mappings":"saAAA,qDACA,qE,u4BAQA,GAAMA,CAAAA,aAAoD,CAAG,QAAvDA,CAAAA,aAAuD,MAGvD,IAFJC,CAAAA,KAEI,MAFJA,KAEI,CADJC,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,SAAS,CAAG,kBAA+B,EAA/B,CAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAeC,QAAf,CAAwC,CAC1DH,SAAS,CAACI,OAAV,CAAkBF,IAAlB,EAA0BC,QAA1B,CACA,GAAME,CAAAA,iBAAiB,CAAGC,MAAM,CAACC,IAAP,CAAYP,SAAS,CAACI,OAAtB,EAA+BI,MAA/B,CACxB,SAAAN,IAAI,QAAIF,CAAAA,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAJ,EADoB,EAExBO,MAFF,CAGA,GAAIJ,iBAAiB,EAAI,CAAzB,CACEK,OAAO,CAACC,IAAR,CACE,mCADF,uBAEwBN,iBAFxB,gJAGE,6HAHF,EAKF,MAAOL,CAAAA,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAP,CACD,CAZD,CAcA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACV,IAAD,CAAkB,CACvC,QAASW,CAAAA,cAAT,CAAwBV,QAAxB,CAAwE,CACtE,MACE,CAAC,CAACA,QAAF,EACA,CAAC,CAAEA,QADH,EAEA,MAAOA,CAAAA,QAAP,GAAoB,UAHtB,CAKD,CACD,GAAIU,cAAc,CAACb,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAD,CAAlB,CAA6C,CAC3C,CAAEF,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAD,GACDF,SAAS,CAACI,OAAV,CAAkBF,IAAlB,EAA0B,IAA1B,CACD,CACF,CAZD,CAcA,GAAMY,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACZ,IAAD,CAAkB,CAC1C,MAAO,CAAC,CAACF,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAT,CACD,CAFD,CAIA,GAAMa,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACb,IAAD,CAAkB,CACpC,GAAIY,iBAAiB,CAACZ,IAAD,CAArB,CAA6B,MAAOF,CAAAA,SAAS,CAACI,OAAV,CAAkBF,IAAlB,CAAP,CAC7B,MAAO,KAAP,CACD,CAHD,CAKA,GAAMc,CAAAA,KAAwB,kBACzBlB,KADyB,EAE5BG,WAAW,CAAXA,WAF4B,CAG5BW,cAAc,CAAdA,cAH4B,CAI5BE,iBAAiB,CAAjBA,iBAJ4B,CAK5BC,WAAW,CAAXA,WAL4B,EAA9B,CAOA,MACE,8BAAC,qBAAD,CAAc,QAAd,uBAA2B,CAAEC,KAAK,CAALA,KAAF,CAA3B,mDAAuCjB,QAAvC,CADF,CAGD,CArDD,C,aAuDeF,a","sourcesContent":["import React, { FunctionComponent, useRef } from 'react'\nimport FuegoContext from '../FuegoContext'\nimport { FuegoContextProps } from '../FuegoContext/types'\nimport {\n  FuegoProviderProps,\n  FuegoProviderListeners,\n  ListenerType\n} from './types'\n\nconst FuegoProvider: FunctionComponent<FuegoProviderProps> = ({\n  fuego,\n  children\n}) => {\n  const listeners = useRef<FuegoProviderListeners>({})\n\n  const addListener = (name: string, listener: () => void) => {\n    listeners.current[name] = listener\n    const numberOfListeners = Object.keys(listeners.current).filter(\n      name => listeners.current[name] // listeners that exist\n    ).length\n    if (numberOfListeners >= 4)\n      console.warn(\n        'Fuego warning: too many listeners',\n        `You currently have ${numberOfListeners} firestore listeners running. This can slow perfomance. Consider refactoring, or leaving the \"unsubscribeOnUnmount\" parameter set to true.`,\n        \"If you aren't sure what this error means, search for files that have the useFuego function, with the parameter listen: true\"\n      )\n    return listeners.current[name]\n  }\n\n  const removeListener = (name: string) => {\n    function listenerExists(listener: ListenerType): listener is () => void {\n      return (\n        !!listener &&\n        !!(listener as () => void) &&\n        typeof listener === 'function'\n      )\n    }\n    if (listenerExists(listeners.current[name])) {\n      ;(listeners.current[name] as () => void)()\n      listeners.current[name] = null\n    }\n  }\n\n  const doesListenerExist = (name: string) => {\n    return !!listeners.current[name]\n  }\n\n  const getListener = (name: string) => {\n    if (doesListenerExist(name)) return listeners.current[name]\n    return null\n  }\n\n  const value: FuegoContextProps = {\n    ...fuego,\n    addListener,\n    removeListener,\n    doesListenerExist,\n    getListener\n  }\n  return (\n    <FuegoContext.Provider {...{ value }}>{children}</FuegoContext.Provider>\n  )\n}\n\nexport default FuegoProvider\n"]}