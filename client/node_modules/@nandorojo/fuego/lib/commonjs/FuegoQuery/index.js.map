{"version":3,"sources":["index.ts"],"names":["multipleConditions","w","Array","isArray","multipleOrderBy","o","config","db","ref","path","where","orderBy","limit","startAt","endAt","startAfter","endBefore","isDocument","Error","split","filter","Boolean","length","doc","collection","forEach","order","direction","e","console","error","JSON","stringify","Object","keys","sort","map","configType","listenerNameRef","context","dbRef","listen","notifyOnNetworkStatusChange","setData","setLoading","setError","setExists","warn","addListener","doesListenerExist","getListener","current","getQueryStringId","getRef","get","exists","data","serverTimestamps","id","response","r","push","empty","listenerExists","onSnapshot","querySnapshot","array"],"mappings":"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","sourcesContent":["import {\n\tFuegoQueryConfig,\n\tOrderByArray,\n\tWhereItem,\n\tWhereType,\n\tWhereArray,\n\tOrderByType,\n\tFirestoreRefType,\n\tFuegoQueryInitType,\n\tDocumentModel,\n} from './types'\nimport { FirestoreDbType } from '../Fuego/types'\nimport {\n\tCollectionReference,\n\tDocumentReference,\n\tDocumentSnapshot,\n\tQuerySnapshot,\n} from '@firebase/firestore-types'\n\nfunction multipleConditions(w: WhereType): w is WhereArray {\n\t// return Array.isArray((w as WhereArray)[0])\n\treturn !!(w as WhereArray) && Array.isArray(w[0])\n}\n\nfunction multipleOrderBy(o: OrderByType): o is OrderByArray[] {\n\treturn Array.isArray((o as OrderByArray[])[0])\n}\nexport default class {\n\tprivate config: FuegoQueryConfig\n\n\tconstructor(config: FuegoQueryConfig) {\n\t\tthis.config = config\n\t}\n\n\tgetRef(db: FirestoreDbType) {\n\t\tlet ref: FirestoreRefType | null = null\n\t\tconst {\n\t\t\tpath,\n\t\t\twhere,\n\t\t\torderBy,\n\t\t\tlimit,\n\t\t\tstartAt,\n\t\t\tendAt,\n\t\t\tstartAfter,\n\t\t\tendBefore,\n\t\t} = this.config\n\n\t\tlet isDocument = false\n\t\ttry {\n\t\t\tif (!path)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Empty path supplied to getRef in FuegoQuery class',\n\t\t\t\t)\n\t\t\tisDocument = path.split('/').filter(Boolean).length % 2 === 0\n\n\t\t\tif (isDocument) {\n\t\t\t\tref = db.doc(path)\n\t\t\t} else {\n\t\t\t\tref = db.collection(path)\n\t\t\t\tif (where) {\n\t\t\t\t\tif (multipleConditions(where)) {\n\t\t\t\t\t\t;(where as WhereArray).forEach((w: WhereItem) => {\n\t\t\t\t\t\t\tref = (ref as CollectionReference).where(\n\t\t\t\t\t\t\t\tw[0],\n\t\t\t\t\t\t\t\tw[1],\n\t\t\t\t\t\t\t\tw[2],\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (\n\t\t\t\t\t\ttypeof where[0] === 'string' &&\n\t\t\t\t\t\ttypeof where[1] === 'string'\n\t\t\t\t\t) {\n\t\t\t\t\t\tref = (ref as CollectionReference).where(\n\t\t\t\t\t\t\twhere[0],\n\t\t\t\t\t\t\twhere[1],\n\t\t\t\t\t\t\twhere[2],\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (orderBy) {\n\t\t\t\t\tif (typeof orderBy === 'string') {\n\t\t\t\t\t\tref = ref.orderBy(orderBy)\n\t\t\t\t\t} else if (Array.isArray(orderBy)) {\n\t\t\t\t\t\tif (multipleOrderBy(orderBy)) {\n\t\t\t\t\t\t\t;(orderBy as OrderByArray[]).forEach(\n\t\t\t\t\t\t\t\t(order: OrderByArray) => {\n\t\t\t\t\t\t\t\t\tref = (ref as CollectionReference).orderBy(\n\t\t\t\t\t\t\t\t\t\t...order,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst [order, direction] = orderBy as OrderByArray\n\t\t\t\t\t\t\tref = ref.orderBy(order, direction)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startAt) {\n\t\t\t\t\tref = ref.startAt(startAt)\n\t\t\t\t}\n\t\t\t\tif (endAt) {\n\t\t\t\t\tref = ref.endAt(endAt)\n\t\t\t\t}\n\t\t\t\tif (startAfter) {\n\t\t\t\t\tref = ref.startAfter(startAfter)\n\t\t\t\t}\n\t\t\t\tif (endBefore) {\n\t\t\t\t\tref = ref.endBefore(endBefore)\n\t\t\t\t}\n\t\t\t\tif (limit) {\n\t\t\t\t\tref = ref.limit(limit)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ref = null;\n\t\t\tconsole.error(e)\n\t\t}\n\t\treturn { ref, isDocument }\n\t}\n\tgetQueryStringId() {\n\t\treturn JSON.stringify(\n\t\t\tObject.keys(this.config)\n\t\t\t\t.sort()\n\t\t\t\t.map(configType => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t[configType]: this.config[\n\t\t\t\t\t\t\tconfigType as keyof FuegoQueryConfig\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t)\n\t}\n\tasync handle<DataModel extends DocumentModel>({\n\t\tlistenerNameRef,\n\t\tcontext,\n\t\tdbRef,\n\t\tlisten = false,\n\t\tnotifyOnNetworkStatusChange = true,\n\t\tsetData,\n\t\tsetLoading,\n\t\tsetError,\n\t\tsetExists,\n\t}: FuegoQueryInitType<DataModel>) {\n\t\tconst { path } = this.config\n\t\ttry {\n\t\t\tif (!path) {\n\t\t\t\treturn console.warn(\n\t\t\t\t\t'You called the useFuego hook without providing a path. \\nIf you want access to the firestore db object, try using useFuegoContext() instead.',\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (!context)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'missing context from firestore query handler. check useFuego',\n\t\t\t\t)\n\t\t\tconst { db, addListener, doesListenerExist, getListener } = context\n\t\t\tlistenerNameRef.current = this.getQueryStringId()\n\t\t\tconst { isDocument, ref } = this.getRef(db)\n\t\t\tdbRef.current = ref\n\n\t\t\tif (!listen) {\n\t\t\t\tif (isDocument) {\n\t\t\t\t\tconst doc = await (dbRef.current as DocumentReference).get()\n\t\t\t\t\tsetExists(doc.exists)\n\t\t\t\t\tif (doc.exists) {\n\t\t\t\t\t\tsetData({\n\t\t\t\t\t\t\t...doc.data({ serverTimestamps: 'estimate' }),\n\t\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t} as DataModel)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst response = await (dbRef.current as CollectionReference).get()\n\t\t\t\t\t// const r: object[] = []\n\t\t\t\t\tconst r: DataModel[] = []\n\t\t\t\t\tresponse.forEach(doc =>\n\t\t\t\t\t\tr.push({\n\t\t\t\t\t\t\t...doc.data({ serverTimestamps: 'estimate' }),\n\t\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t} as DataModel),\n\t\t\t\t\t)\n\t\t\t\t\tsetExists(!response.empty)\n\t\t\t\t\tif (!response.empty) {\n\t\t\t\t\t\tsetData(r)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (notifyOnNetworkStatusChange) setLoading(false)\n\t\t\t} else {\n\t\t\t\tconst listenerExists = doesListenerExist(\n\t\t\t\t\tlistenerNameRef.current,\n\t\t\t\t)\n\t\t\t\tif (listenerExists) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Warning, you're trying to initialize the same listener twice. This applies to the firestore query: \",\n\t\t\t\t\t\tthis.config.path,\n\t\t\t\t\t)\n\t\t\t\t\t// TODO fix this issue where having a listener already existent leads to no data...\n\t\t\t\t\tgetListener(listenerNameRef.current)\n\t\t\t\t} else if (isDocument) {\n\t\t\t\t\taddListener(\n\t\t\t\t\t\tlistenerNameRef.current,\n\t\t\t\t\t\t(dbRef.current as DocumentReference).onSnapshot(\n\t\t\t\t\t\t\t(doc: DocumentSnapshot) => {\n\t\t\t\t\t\t\t\tif (doc.exists) {\n\t\t\t\t\t\t\t\t\tsetData({\n\t\t\t\t\t\t\t\t\t\t...doc.data({\n\t\t\t\t\t\t\t\t\t\t\tserverTimestamps: 'estimate',\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t\t\t\t} as DataModel)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetExists(doc.exists)\n\t\t\t\t\t\t\t\tif (notifyOnNetworkStatusChange)\n\t\t\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\taddListener(\n\t\t\t\t\t\tlistenerNameRef.current,\n\t\t\t\t\t\t(dbRef.current as CollectionReference).onSnapshot(\n\t\t\t\t\t\t\t(querySnapshot: QuerySnapshot) => {\n\t\t\t\t\t\t\t\tconst array: DataModel[] = []\n\t\t\t\t\t\t\t\tquerySnapshot.forEach(doc => {\n\t\t\t\t\t\t\t\t\tarray.push({\n\t\t\t\t\t\t\t\t\t\t...doc.data({\n\t\t\t\t\t\t\t\t\t\t\tserverTimestamps: 'estimate',\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t\t\t\t} as DataModel)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tif (!querySnapshot.empty) {\n\t\t\t\t\t\t\t\t\tsetData(array)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetExists(!querySnapshot.empty)\n\t\t\t\t\t\t\t\tif (notifyOnNetworkStatusChange)\n\t\t\t\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetError(e)\n\t\t\tconsole.error(\n\t\t\t\t'fuego error: \\nuseFuego failed. \\nError: ',\n\t\t\t\tJSON.stringify(e),\n\t\t\t)\n\t\t}\n\t}\n}\n"]}