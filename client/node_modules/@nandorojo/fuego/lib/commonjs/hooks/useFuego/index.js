var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _useFuegoContext=_interopRequireDefault(require("../useFuegoContext"));var _react=require("react");var _FuegoQuery=_interopRequireDefault(require("../../FuegoQuery"));function useFuego(query){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _query$listen=query.listen,listen=_query$listen===void 0?false:_query$listen;var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),exists=_useState2[0],setExists=_useState2[1];var handleData=options.handleData,handleLoading=options.handleLoading,handleError=options.handleError,_options$unsubscribeO=options.unsubscribeOnUnmount,unsubscribeOnUnmount=_options$unsubscribeO===void 0?true:_options$unsubscribeO,_options$notifyOnNetw=options.notifyOnNetworkStatusChange,notifyOnNetworkStatusChange=_options$notifyOnNetw===void 0?true:_options$notifyOnNetw;var context=(0,_useFuegoContext.default)();var db=context.db,removeListener=context.removeListener;var _useState3=(0,_react.useState)(null),_useState4=(0,_slicedToArray2.default)(_useState3,2),data=_useState4[0],setDataState=_useState4[1];var _useState5=(0,_react.useState)(true),_useState6=(0,_slicedToArray2.default)(_useState5,2),loading=_useState6[0],setLoadingState=_useState6[1];var _useState7=(0,_react.useState)(null),_useState8=(0,_slicedToArray2.default)(_useState7,2),error=_useState8[0],setErrorState=_useState8[1];var setData=handleData||setDataState,setLoading=handleLoading||setLoadingState,setError=handleError||setErrorState;var ref=(0,_react.useRef)(null);var listenerName=(0,_react.useRef)('');var unsubscribe=(0,_react.useRef)(function(){});(0,_react.useEffect)(function(){new _FuegoQuery.default(query).handle({listen:listen,notifyOnNetworkStatusChange:notifyOnNetworkStatusChange,setData:setData,setLoading:setLoading,setError:setError,listenerNameRef:listenerName,dbRef:ref,context:context,setExists:setExists});if(listen)unsubscribe.current=function(){return removeListener(listenerName.current);};return function(){if(unsubscribeOnUnmount&&listenerName.current){;unsubscribe.current();}};},[].concat((0,_toConsumableArray2.default)(Object.keys(options).map(function(o){return options[o];})),(0,_toConsumableArray2.default)(Object.keys(query).map(function(q){return query[q];}))));var refetch=function refetch(){if(listen){console.error('It looks like you are trying to refetch a subscription in useFuego. Note that this will have no effect, since the listener with automatically reconnect. To use refetch, set listen: false. This is related to the following query:',query.path);}else{new _FuegoQuery.default(query).handle({listen:false,notifyOnNetworkStatusChange:notifyOnNetworkStatusChange,setData:setData,setLoading:setLoading,setError:setError,listenerNameRef:listenerName,dbRef:ref,context:context,setExists:setExists});}};return{data:data,loading:loading,error:error,db:db,ref:ref.current,unsubscribe:unsubscribe.current,exists:exists,refetch:refetch};}var _default=useFuego;exports.default=_default;
//# sourceMappingURL=index.js.map