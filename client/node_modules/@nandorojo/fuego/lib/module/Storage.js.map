{"version":3,"sources":["Storage.ts"],"names":["AsyncStorage","MEMORY_KEY_PREFIX","dataMemory","MyStorage","key","value","setItem","Object","prototype","hasOwnProperty","call","undefined","removeItem","MemoryStorage","syncPromise","Promise","res","rej","getAllKeys","errKeys","keys","memoryKeys","filter","startsWith","multiGet","err","stores","map","result","index","store","memoryKey","replace"],"mappings":"gIAAA,OAASA,YAAT,KAA6B,cAA7B,CAGA,GAAMC,CAAAA,iBAAiB,CAAG,aAA1B,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,C,GAGMC,CAAAA,S,qIAKUC,G,CAAKC,K,CAAO,CAC1BL,YAAY,CAACM,OAAb,CAAqBL,iBAAiB,CAAGG,GAAzC,CAA8CC,KAA9C,EACAH,UAAU,CAACE,GAAD,CAAV,CAAkBC,KAAlB,CACA,MAAOH,CAAAA,UAAU,CAACE,GAAD,CAAjB,CACA,C,wCAKcA,G,CAAK,CACnB,MAAOG,CAAAA,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,UAArC,CAAiDE,GAAjD,EAAwDF,UAAU,CAACE,GAAD,CAAlE,CAA0EO,SAAjF,CACA,C,8CAKiBP,G,CAAK,CACtBJ,YAAY,CAACY,UAAb,CAAwBX,iBAAiB,CAAGG,GAA5C,EACA,MAAO,OAAOF,CAAAA,UAAU,CAACE,GAAD,CAAxB,CACA,C,qCAKc,CACdF,UAAU,CAAG,EAAb,CACA,MAAOA,CAAAA,UAAP,CACA,C,mCAKa,CACb,GAAI,CAACW,aAAa,CAACC,WAAnB,CAAgC,CAC/BD,aAAa,CAACC,WAAd,CAA4B,GAAIC,CAAAA,OAAJ,CAAY,SAACC,GAAD,CAAMC,GAAN,CAAc,CACrDjB,YAAY,CAACkB,UAAb,CAAwB,SAACC,OAAD,CAAUC,IAAV,CAAmB,CAC1C,GAAID,OAAJ,CAAaF,GAAG,CAACE,OAAD,CAAH,CACb,GAAME,CAAAA,UAAU,CAAGD,IAAI,CAACE,MAAL,CAAY,SAAAlB,GAAG,QAAIA,CAAAA,GAAG,CAACmB,UAAJ,CAAetB,iBAAf,CAAJ,EAAf,CAAnB,CACAD,YAAY,CAACwB,QAAb,CAAsBH,UAAtB,CAAkC,SAACI,GAAD,CAAMC,MAAN,CAAiB,CAClD,GAAID,GAAJ,CAASR,GAAG,CAACQ,GAAD,CAAH,CACTC,MAAM,CAACC,GAAP,CAAW,SAACC,MAAD,CAASC,KAAT,CAAgBC,KAAhB,CAA0B,CACpC,GAAM1B,CAAAA,GAAG,CAAG0B,KAAK,CAACD,KAAD,CAAL,CAAa,CAAb,CAAZ,CACA,GAAMxB,CAAAA,KAAK,CAAGyB,KAAK,CAACD,KAAD,CAAL,CAAa,CAAb,CAAd,CACA,GAAME,CAAAA,SAAS,CAAG3B,GAAG,CAAC4B,OAAJ,CAAY/B,iBAAZ,CAA+B,EAA/B,CAAlB,CACAC,UAAU,CAAC6B,SAAD,CAAV,CAAwB1B,KAAxB,CACA,CALD,EAMAW,GAAG,GACH,CATD,EAUA,CAbD,EAcA,CAf2B,CAA5B,CAgBA,CACD,MAAOH,CAAAA,aAAa,CAACC,WAArB,CACA,C,yBAzDIX,S,CACEW,W,CAAc,I","sourcesContent":["import { AsyncStorage } from 'react-native'\n// https://aws-amplify.github.io/docs/js/authentication#using-components-in-react--react-native\n\nconst MEMORY_KEY_PREFIX = '@MyStorage:'\nlet dataMemory = {}\n\n/** @class */\nclass MyStorage {\n\tstatic syncPromise = null\n\t/**\n\t * This is used to set a specific item in storage\n\t */\n\tstatic setItem(key, value) {\n\t\tAsyncStorage.setItem(MEMORY_KEY_PREFIX + key, value)\n\t\tdataMemory[key] = value\n\t\treturn dataMemory[key]\n\t}\n\n\t/**\n\t * This is used to get a specific key from storage\n\t */\n\tstatic getItem(key) {\n\t\treturn Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined\n\t}\n\n\t/**\n\t * This is used to remove an item from storage\n\t */\n\tstatic removeItem(key) {\n\t\tAsyncStorage.removeItem(MEMORY_KEY_PREFIX + key)\n\t\treturn delete dataMemory[key]\n\t}\n\n\t/**\n\t * This is used to clear the storage\n\t */\n\tstatic clear() {\n\t\tdataMemory = {}\n\t\treturn dataMemory\n\t}\n\n\t/**\n\t * Will sync the MemoryStorage data from AsyncStorage to storageWindow MemoryStorage\n\t */\n\tstatic sync() {\n\t\tif (!MemoryStorage.syncPromise) {\n\t\t\tMemoryStorage.syncPromise = new Promise((res, rej) => {\n\t\t\t\tAsyncStorage.getAllKeys((errKeys, keys) => {\n\t\t\t\t\tif (errKeys) rej(errKeys)\n\t\t\t\t\tconst memoryKeys = keys.filter(key => key.startsWith(MEMORY_KEY_PREFIX))\n\t\t\t\t\tAsyncStorage.multiGet(memoryKeys, (err, stores) => {\n\t\t\t\t\t\tif (err) rej(err)\n\t\t\t\t\t\tstores.map((result, index, store) => {\n\t\t\t\t\t\t\tconst key = store[index][0]\n\t\t\t\t\t\t\tconst value = store[index][1]\n\t\t\t\t\t\t\tconst memoryKey = key.replace(MEMORY_KEY_PREFIX, '')\n\t\t\t\t\t\t\tdataMemory[memoryKey] = value\n\t\t\t\t\t\t})\n\t\t\t\t\t\tres()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\treturn MemoryStorage.syncPromise\n\t}\n}\n"]}