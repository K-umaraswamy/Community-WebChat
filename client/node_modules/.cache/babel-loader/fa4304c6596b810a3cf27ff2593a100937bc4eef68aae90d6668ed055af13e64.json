{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { nanoid } from 'nanoid';\nexport var makeAddNotifications = function (setNotifications, notificationTimeouts) {\n  return function (text, type) {\n    if (typeof text !== 'string' || type !== 'success' && type !== 'error') {\n      return;\n    }\n    var id = nanoid();\n    setNotifications(function (prevNotifications) {\n      return __spreadArray(__spreadArray([], prevNotifications, true), [{\n        id: id,\n        text: text,\n        type: type\n      }], false);\n    });\n    var timeout = setTimeout(function () {\n      return setNotifications(function (prevNotifications) {\n        return prevNotifications.filter(function (notification) {\n          return notification.id !== id;\n        });\n      });\n    }, 5000);\n    notificationTimeouts.push(timeout);\n  };\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","nanoid","makeAddNotifications","setNotifications","notificationTimeouts","text","type","id","prevNotifications","timeout","setTimeout","filter","notification","push"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/stream-chat-react/dist/components/Channel/utils.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { nanoid } from 'nanoid';\nexport var makeAddNotifications = function (setNotifications, notificationTimeouts) { return function (text, type) {\n    if (typeof text !== 'string' || (type !== 'success' && type !== 'error')) {\n        return;\n    }\n    var id = nanoid();\n    setNotifications(function (prevNotifications) { return __spreadArray(__spreadArray([], prevNotifications, true), [{ id: id, text: text, type: type }], false); });\n    var timeout = setTimeout(function () {\n        return setNotifications(function (prevNotifications) {\n            return prevNotifications.filter(function (notification) { return notification.id !== id; });\n        });\n    }, 5000);\n    notificationTimeouts.push(timeout);\n}; };\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEG,EAAE,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAI,CAAC,EAAE;MACpB,IAAI,CAACM,EAAE,EAAEA,EAAE,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAOL,EAAE,CAACY,MAAM,CAACL,EAAE,IAAIC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,SAASY,MAAM,QAAQ,QAAQ;AAC/B,OAAO,IAAIC,oBAAoB,GAAG,SAAAA,CAAUC,gBAAgB,EAAEC,oBAAoB,EAAE;EAAE,OAAO,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAC/G,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAKC,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,OAAQ,EAAE;MACtE;IACJ;IACA,IAAIC,EAAE,GAAGN,MAAM,CAAC,CAAC;IACjBE,gBAAgB,CAAC,UAAUK,iBAAiB,EAAE;MAAE,OAAOrB,aAAa,CAACA,aAAa,CAAC,EAAE,EAAEqB,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC;QAAED,EAAE,EAAEA,EAAE;QAAEF,IAAI,EAAEA,IAAI;QAAEC,IAAI,EAAEA;MAAK,CAAC,CAAC,EAAE,KAAK,CAAC;IAAE,CAAC,CAAC;IACjK,IAAIG,OAAO,GAAGC,UAAU,CAAC,YAAY;MACjC,OAAOP,gBAAgB,CAAC,UAAUK,iBAAiB,EAAE;QACjD,OAAOA,iBAAiB,CAACG,MAAM,CAAC,UAAUC,YAAY,EAAE;UAAE,OAAOA,YAAY,CAACL,EAAE,KAAKA,EAAE;QAAE,CAAC,CAAC;MAC/F,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACRH,oBAAoB,CAACS,IAAI,CAACJ,OAAO,CAAC;EACtC,CAAC;AAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}