{"ast":null,"code":"'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nA comment within an XML document.\n\n@public\n*/\nclass XmlComment extends XmlNode {\n  /**\n  @param {string} [content]\n  */\n  constructor(content = '') {\n    super();\n\n    /**\n    Content of this comment.\n     @type {string}\n    @public\n    */\n    this.content = content;\n  }\n  get type() {\n    return XmlNode.TYPE_COMMENT;\n  }\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      content: this.content\n    });\n  }\n}\nmodule.exports = XmlComment;","map":{"version":3,"names":["XmlNode","require","XmlComment","constructor","content","type","TYPE_COMMENT","toJSON","Object","assign","prototype","call","module","exports"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/@rgrove/parse-xml/src/lib/XmlComment.js"],"sourcesContent":["'use strict';\n\nconst XmlNode = require('./XmlNode');\n\n/**\nA comment within an XML document.\n\n@public\n*/\nclass XmlComment extends XmlNode {\n  /**\n  @param {string} [content]\n  */\n  constructor(content = '') {\n    super();\n\n    /**\n    Content of this comment.\n\n    @type {string}\n    @public\n    */\n    this.content = content;\n  }\n\n  get type() {\n    return XmlNode.TYPE_COMMENT;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      content: this.content\n    });\n  }\n}\n\nmodule.exports = XmlComment;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASF,OAAO,CAAC;EAC/B;AACF;AACA;EACEG,WAAWA,CAACC,OAAO,GAAG,EAAE,EAAE;IACxB,KAAK,CAAC,CAAC;;IAEP;AACJ;AACA;AACA;AACA;IAEI,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEA,IAAIC,IAAIA,CAAA,EAAG;IACT,OAAOL,OAAO,CAACM,YAAY;EAC7B;EAEAC,MAAMA,CAAA,EAAG;IACP,OAAOC,MAAM,CAACC,MAAM,CAACT,OAAO,CAACU,SAAS,CAACH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE;MACxDP,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC,CAAC;EACJ;AACF;AAEAQ,MAAM,CAACC,OAAO,GAAGX,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}