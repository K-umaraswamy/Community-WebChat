{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport { logChatPromiseExecution } from 'stream-chat';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport var useMessageInputText = function (props, state, dispatch) {\n  var channel = useChannelStateContext('useMessageInputText').channel;\n  var additionalTextareaProps = props.additionalTextareaProps,\n    focus = props.focus,\n    parent = props.parent,\n    _a = props.publishTypingEvent,\n    publishTypingEvent = _a === void 0 ? true : _a;\n  var text = state.text;\n  var textareaRef = useRef();\n  // Focus\n  useEffect(function () {\n    if (focus && textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  }, [focus]);\n  // Text + cursor position\n  var newCursorPosition = useRef();\n  var insertText = useCallback(function (textToInsert) {\n    var maxLength = (additionalTextareaProps || {}).maxLength;\n    if (!textareaRef.current) {\n      dispatch({\n        getNewText: function (text) {\n          var updatedText = text + textToInsert;\n          if (maxLength && updatedText.length > maxLength) {\n            return updatedText.slice(0, maxLength);\n          }\n          return updatedText;\n        },\n        type: 'setText'\n      });\n      return;\n    }\n    var _a = textareaRef.current,\n      selectionEnd = _a.selectionEnd,\n      selectionStart = _a.selectionStart;\n    newCursorPosition.current = selectionStart + textToInsert.length;\n    dispatch({\n      getNewText: function (prevText) {\n        var updatedText = prevText.slice(0, selectionStart) + textToInsert + prevText.slice(selectionEnd);\n        if (maxLength && updatedText.length > maxLength) {\n          return updatedText.slice(0, maxLength);\n        }\n        return updatedText;\n      },\n      type: 'setText'\n    });\n  }, [additionalTextareaProps, newCursorPosition, textareaRef]);\n  useEffect(function () {\n    var textareaElement = textareaRef.current;\n    if (textareaElement && newCursorPosition.current !== undefined) {\n      textareaElement.selectionStart = newCursorPosition.current;\n      textareaElement.selectionEnd = newCursorPosition.current;\n      newCursorPosition.current = undefined;\n    }\n  }, [text, newCursorPosition]);\n  var handleChange = useCallback(function (event) {\n    event.preventDefault();\n    if (!event || !event.target) {\n      return;\n    }\n    var newText = event.target.value;\n    dispatch({\n      getNewText: function () {\n        return newText;\n      },\n      type: 'setText'\n    });\n    if (publishTypingEvent && newText && channel) {\n      logChatPromiseExecution(channel.keystroke(parent === null || parent === void 0 ? void 0 : parent.id), 'start typing event');\n    }\n  }, [channel, parent, publishTypingEvent]);\n  return {\n    handleChange: handleChange,\n    insertText: insertText,\n    textareaRef: textareaRef\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","logChatPromiseExecution","useChannelStateContext","useMessageInputText","props","state","dispatch","channel","additionalTextareaProps","focus","parent","_a","publishTypingEvent","text","textareaRef","current","newCursorPosition","insertText","textToInsert","maxLength","getNewText","updatedText","length","slice","type","selectionEnd","selectionStart","prevText","textareaElement","undefined","handleChange","event","preventDefault","target","newText","value","keystroke","id"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputText.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { logChatPromiseExecution } from 'stream-chat';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport var useMessageInputText = function (props, state, dispatch) {\n    var channel = useChannelStateContext('useMessageInputText').channel;\n    var additionalTextareaProps = props.additionalTextareaProps, focus = props.focus, parent = props.parent, _a = props.publishTypingEvent, publishTypingEvent = _a === void 0 ? true : _a;\n    var text = state.text;\n    var textareaRef = useRef();\n    // Focus\n    useEffect(function () {\n        if (focus && textareaRef.current) {\n            textareaRef.current.focus();\n        }\n    }, [focus]);\n    // Text + cursor position\n    var newCursorPosition = useRef();\n    var insertText = useCallback(function (textToInsert) {\n        var maxLength = (additionalTextareaProps || {}).maxLength;\n        if (!textareaRef.current) {\n            dispatch({\n                getNewText: function (text) {\n                    var updatedText = text + textToInsert;\n                    if (maxLength && updatedText.length > maxLength) {\n                        return updatedText.slice(0, maxLength);\n                    }\n                    return updatedText;\n                },\n                type: 'setText',\n            });\n            return;\n        }\n        var _a = textareaRef.current, selectionEnd = _a.selectionEnd, selectionStart = _a.selectionStart;\n        newCursorPosition.current = selectionStart + textToInsert.length;\n        dispatch({\n            getNewText: function (prevText) {\n                var updatedText = prevText.slice(0, selectionStart) + textToInsert + prevText.slice(selectionEnd);\n                if (maxLength && updatedText.length > maxLength) {\n                    return updatedText.slice(0, maxLength);\n                }\n                return updatedText;\n            },\n            type: 'setText',\n        });\n    }, [additionalTextareaProps, newCursorPosition, textareaRef]);\n    useEffect(function () {\n        var textareaElement = textareaRef.current;\n        if (textareaElement && newCursorPosition.current !== undefined) {\n            textareaElement.selectionStart = newCursorPosition.current;\n            textareaElement.selectionEnd = newCursorPosition.current;\n            newCursorPosition.current = undefined;\n        }\n    }, [text, newCursorPosition]);\n    var handleChange = useCallback(function (event) {\n        event.preventDefault();\n        if (!event || !event.target) {\n            return;\n        }\n        var newText = event.target.value;\n        dispatch({\n            getNewText: function () { return newText; },\n            type: 'setText',\n        });\n        if (publishTypingEvent && newText && channel) {\n            logChatPromiseExecution(channel.keystroke(parent === null || parent === void 0 ? void 0 : parent.id), 'start typing event');\n        }\n    }, [channel, parent, publishTypingEvent]);\n    return {\n        handleChange: handleChange,\n        insertText: insertText,\n        textareaRef: textareaRef,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}