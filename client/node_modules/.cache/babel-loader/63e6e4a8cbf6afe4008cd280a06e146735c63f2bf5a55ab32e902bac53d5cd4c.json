{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport var PROGRESS_UPDATE_INTERVAL = 100;\nexport var useAudioController = function () {\n  var _a = useState(false),\n    isPlaying = _a[0],\n    setIsPlaying = _a[1];\n  var _b = useState(0),\n    progress = _b[0],\n    setProgress = _b[1];\n  var audioRef = useRef(null);\n  var togglePlay = useCallback(function () {\n    setIsPlaying(function (playing) {\n      return !playing;\n    });\n  }, []);\n  var seek = useCallback(function (_a) {\n    var clientX = _a.clientX,\n      currentTarget = _a.currentTarget;\n    if (!audioRef.current) return;\n    var _b = currentTarget.getBoundingClientRect(),\n      width = _b.width,\n      x = _b.x;\n    var ratio = (clientX - x) / width;\n    if (!isPlaying) setProgress(ratio * 100);\n    audioRef.current.currentTime = ratio * audioRef.current.duration;\n  }, [isPlaying]);\n  useEffect(function () {\n    if (!audioRef.current || !isPlaying) return;\n    var interval = window.setInterval(function () {\n      if (!audioRef.current) return;\n      var _a = audioRef.current,\n        currentTime = _a.currentTime,\n        duration = _a.duration;\n      setProgress(currentTime / duration * 100);\n      if (currentTime === duration) setIsPlaying(false);\n    }, PROGRESS_UPDATE_INTERVAL);\n    audioRef.current.play();\n    return function () {\n      var _a;\n      (_a = audioRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n      window.clearInterval(interval);\n    };\n  }, [isPlaying]);\n  return {\n    audioRef: audioRef,\n    isPlaying: isPlaying,\n    progress: progress,\n    seek: seek,\n    togglePlay: togglePlay\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","PROGRESS_UPDATE_INTERVAL","useAudioController","_a","isPlaying","setIsPlaying","_b","progress","setProgress","audioRef","togglePlay","playing","seek","clientX","currentTarget","current","getBoundingClientRect","width","x","ratio","currentTime","duration","interval","window","setInterval","play","pause","clearInterval"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/stream-chat-react/dist/components/Attachment/hooks/useAudioController.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nexport var PROGRESS_UPDATE_INTERVAL = 100;\nexport var useAudioController = function () {\n    var _a = useState(false), isPlaying = _a[0], setIsPlaying = _a[1];\n    var _b = useState(0), progress = _b[0], setProgress = _b[1];\n    var audioRef = useRef(null);\n    var togglePlay = useCallback(function () {\n        setIsPlaying(function (playing) { return !playing; });\n    }, []);\n    var seek = useCallback(function (_a) {\n        var clientX = _a.clientX, currentTarget = _a.currentTarget;\n        if (!audioRef.current)\n            return;\n        var _b = currentTarget.getBoundingClientRect(), width = _b.width, x = _b.x;\n        var ratio = (clientX - x) / width;\n        if (!isPlaying)\n            setProgress(ratio * 100);\n        audioRef.current.currentTime = ratio * audioRef.current.duration;\n    }, [isPlaying]);\n    useEffect(function () {\n        if (!audioRef.current || !isPlaying)\n            return;\n        var interval = window.setInterval(function () {\n            if (!audioRef.current)\n                return;\n            var _a = audioRef.current, currentTime = _a.currentTime, duration = _a.duration;\n            setProgress((currentTime / duration) * 100);\n            if (currentTime === duration)\n                setIsPlaying(false);\n        }, PROGRESS_UPDATE_INTERVAL);\n        audioRef.current.play();\n        return function () {\n            var _a;\n            (_a = audioRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n            window.clearInterval(interval);\n        };\n    }, [isPlaying]);\n    return {\n        audioRef: audioRef,\n        isPlaying: isPlaying,\n        progress: progress,\n        seek: seek,\n        togglePlay: togglePlay,\n    };\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,OAAO,IAAIC,wBAAwB,GAAG,GAAG;AACzC,OAAO,IAAIC,kBAAkB,GAAG,SAAAA,CAAA,EAAY;EACxC,IAAIC,EAAE,GAAGH,QAAQ,CAAC,KAAK,CAAC;IAAEI,SAAS,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,YAAY,GAAGF,EAAE,CAAC,CAAC,CAAC;EACjE,IAAIG,EAAE,GAAGN,QAAQ,CAAC,CAAC,CAAC;IAAEO,QAAQ,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,WAAW,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC3D,IAAIG,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC3B,IAAIW,UAAU,GAAGb,WAAW,CAAC,YAAY;IACrCQ,YAAY,CAAC,UAAUM,OAAO,EAAE;MAAE,OAAO,CAACA,OAAO;IAAE,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EACN,IAAIC,IAAI,GAAGf,WAAW,CAAC,UAAUM,EAAE,EAAE;IACjC,IAAIU,OAAO,GAAGV,EAAE,CAACU,OAAO;MAAEC,aAAa,GAAGX,EAAE,CAACW,aAAa;IAC1D,IAAI,CAACL,QAAQ,CAACM,OAAO,EACjB;IACJ,IAAIT,EAAE,GAAGQ,aAAa,CAACE,qBAAqB,CAAC,CAAC;MAAEC,KAAK,GAAGX,EAAE,CAACW,KAAK;MAAEC,CAAC,GAAGZ,EAAE,CAACY,CAAC;IAC1E,IAAIC,KAAK,GAAG,CAACN,OAAO,GAAGK,CAAC,IAAID,KAAK;IACjC,IAAI,CAACb,SAAS,EACVI,WAAW,CAACW,KAAK,GAAG,GAAG,CAAC;IAC5BV,QAAQ,CAACM,OAAO,CAACK,WAAW,GAAGD,KAAK,GAAGV,QAAQ,CAACM,OAAO,CAACM,QAAQ;EACpE,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EACfN,SAAS,CAAC,YAAY;IAClB,IAAI,CAACW,QAAQ,CAACM,OAAO,IAAI,CAACX,SAAS,EAC/B;IACJ,IAAIkB,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAAC,YAAY;MAC1C,IAAI,CAACf,QAAQ,CAACM,OAAO,EACjB;MACJ,IAAIZ,EAAE,GAAGM,QAAQ,CAACM,OAAO;QAAEK,WAAW,GAAGjB,EAAE,CAACiB,WAAW;QAAEC,QAAQ,GAAGlB,EAAE,CAACkB,QAAQ;MAC/Eb,WAAW,CAAEY,WAAW,GAAGC,QAAQ,GAAI,GAAG,CAAC;MAC3C,IAAID,WAAW,KAAKC,QAAQ,EACxBhB,YAAY,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAEJ,wBAAwB,CAAC;IAC5BQ,QAAQ,CAACM,OAAO,CAACU,IAAI,CAAC,CAAC;IACvB,OAAO,YAAY;MACf,IAAItB,EAAE;MACN,CAACA,EAAE,GAAGM,QAAQ,CAACM,OAAO,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuB,KAAK,CAAC,CAAC;MACvEH,MAAM,CAACI,aAAa,CAACL,QAAQ,CAAC;IAClC,CAAC;EACL,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EACf,OAAO;IACHK,QAAQ,EAAEA,QAAQ;IAClBL,SAAS,EAAEA,SAAS;IACpBG,QAAQ,EAAEA,QAAQ;IAClBK,IAAI,EAAEA,IAAI;IACVF,UAAU,EAAEA;EAChB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}