{"ast":null,"code":"import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n  var _a, _b;\n  var active = props.active,\n    _c = props.Avatar,\n    Avatar = _c === void 0 ? DefaultAvatar : _c,\n    channel = props.channel,\n    _d = props.className,\n    customClassName = _d === void 0 ? '' : _d,\n    displayImage = props.displayImage,\n    displayTitle = props.displayTitle,\n    latestMessage = props.latestMessage,\n    customOnSelectChannel = props.onSelect,\n    setActiveChannel = props.setActiveChannel,\n    unread = props.unread,\n    watchers = props.watchers;\n  var channelPreviewButton = useRef(null);\n  var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n  var onSelectChannel = function (e) {\n    if (customOnSelectChannel) {\n      customOnSelectChannel(e);\n    } else if (setActiveChannel) {\n      setActiveChannel(channel, watchers);\n    }\n    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n      channelPreviewButton.current.blur();\n    }\n  };\n  return React.createElement(\"button\", {\n    \"aria-label\": \"Select Channel: \".concat(displayTitle || ''),\n    \"aria-selected\": active,\n    className: clsx(\"str-chat__channel-preview-messenger str-chat__channel-preview\", active && 'str-chat__channel-preview-messenger--active', unread && unread >= 1 && 'str-chat__channel-preview-messenger--unread', customClassName),\n    \"data-testid\": 'channel-preview-button',\n    onClick: onSelectChannel,\n    ref: channelPreviewButton,\n    role: 'option'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--left'\n  }, React.createElement(Avatar, {\n    image: displayImage,\n    name: avatarName,\n    size: 40\n  })), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--right str-chat__channel-preview-end'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-end-first-row'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--name'\n  }, React.createElement(\"span\", null, displayTitle)), !!unread && React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-unread-badge',\n    \"data-testid\": 'unread-badge'\n  }, unread)), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--last-message'\n  }, latestMessage)));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);","map":{"version":3,"names":["React","useRef","clsx","Avatar","DefaultAvatar","UnMemoizedChannelPreviewMessenger","props","_a","_b","active","_c","channel","_d","className","customClassName","displayImage","displayTitle","latestMessage","customOnSelectChannel","onSelect","setActiveChannel","unread","watchers","channelPreviewButton","avatarName","state","messages","length","user","id","onSelectChannel","e","current","blur","createElement","concat","onClick","ref","role","image","name","size","ChannelPreviewMessenger","memo"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewMessenger.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n    var _a, _b;\n    var active = props.active, _c = props.Avatar, Avatar = _c === void 0 ? DefaultAvatar : _c, channel = props.channel, _d = props.className, customClassName = _d === void 0 ? '' : _d, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, customOnSelectChannel = props.onSelect, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;\n    var channelPreviewButton = useRef(null);\n    var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);\n    var onSelectChannel = function (e) {\n        if (customOnSelectChannel) {\n            customOnSelectChannel(e);\n        }\n        else if (setActiveChannel) {\n            setActiveChannel(channel, watchers);\n        }\n        if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n            channelPreviewButton.current.blur();\n        }\n    };\n    return (React.createElement(\"button\", { \"aria-label\": \"Select Channel: \".concat(displayTitle || ''), \"aria-selected\": active, className: clsx(\"str-chat__channel-preview-messenger str-chat__channel-preview\", active && 'str-chat__channel-preview-messenger--active', unread && unread >= 1 && 'str-chat__channel-preview-messenger--unread', customClassName), \"data-testid\": 'channel-preview-button', onClick: onSelectChannel, ref: channelPreviewButton, role: 'option' },\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--left' },\n            React.createElement(Avatar, { image: displayImage, name: avatarName, size: 40 })),\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--right str-chat__channel-preview-end' },\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-end-first-row' },\n                React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--name' },\n                    React.createElement(\"span\", null, displayTitle)),\n                !!unread && (React.createElement(\"div\", { className: 'str-chat__channel-preview-unread-badge', \"data-testid\": 'unread-badge' }, unread))),\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--last-message' }, latestMessage))));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}