{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useContext } from 'react';\n//@ts-expect-error\nimport DefaultEmojiIndex from 'emoji-mart/dist/utils/emoji-index/nimble-emoji-index.js';\nvar DefaultEmoji = React.lazy(function () {\n  return import('./DefaultEmoji');\n});\nvar DefaultEmojiPicker = React.lazy(function () {\n  return import('./DefaultEmojiPicker');\n});\nexport var EmojiContext = React.createContext(undefined);\nexport var EmojiProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  var _b = value.Emoji,\n    Emoji = _b === void 0 ? DefaultEmoji : _b,\n    emojiConfig = value.emojiConfig,\n    _c = value.EmojiIndex,\n    EmojiIndex = _c === void 0 ? DefaultEmojiIndex : _c,\n    _d = value.EmojiPicker,\n    EmojiPicker = _d === void 0 ? DefaultEmojiPicker : _d;\n  var emojiContextValue = {\n    Emoji: Emoji,\n    emojiConfig: emojiConfig,\n    EmojiIndex: EmojiIndex,\n    EmojiPicker: EmojiPicker\n  };\n  return React.createElement(EmojiContext.Provider, {\n    value: emojiContextValue\n  }, children);\n};\nexport var useEmojiContext = function (componentName) {\n  var contextValue = useContext(EmojiContext);\n  if (!contextValue) {\n    console.warn(\"The useEmojiContext hook was called outside of the EmojiContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n    return {};\n  }\n  return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if EmojiContext\n * typing is desired while using the HOC withEmojiContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withEmojiContext = function (Component) {\n  var WithEmojiContextComponent = function (props) {\n    var componentContext = useEmojiContext();\n    return React.createElement(Component, __assign({}, props, componentContext));\n  };\n  WithEmojiContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');\n  return WithEmojiContextComponent;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useContext","DefaultEmojiIndex","DefaultEmoji","lazy","DefaultEmojiPicker","EmojiContext","createContext","undefined","EmojiProvider","_a","children","value","_b","Emoji","emojiConfig","_c","EmojiIndex","_d","EmojiPicker","emojiContextValue","createElement","Provider","useEmojiContext","componentName","contextValue","console","warn","concat","withEmojiContext","Component","WithEmojiContextComponent","props","componentContext","displayName","name","replace"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/stream-chat-react/dist/context/EmojiContext.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useContext } from 'react';\n//@ts-expect-error\nimport DefaultEmojiIndex from 'emoji-mart/dist/utils/emoji-index/nimble-emoji-index.js';\nvar DefaultEmoji = React.lazy(function () { return import('./DefaultEmoji'); });\nvar DefaultEmojiPicker = React.lazy(function () { return import('./DefaultEmojiPicker'); });\nexport var EmojiContext = React.createContext(undefined);\nexport var EmojiProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    var _b = value.Emoji, Emoji = _b === void 0 ? DefaultEmoji : _b, emojiConfig = value.emojiConfig, _c = value.EmojiIndex, EmojiIndex = _c === void 0 ? DefaultEmojiIndex : _c, _d = value.EmojiPicker, EmojiPicker = _d === void 0 ? DefaultEmojiPicker : _d;\n    var emojiContextValue = {\n        Emoji: Emoji,\n        emojiConfig: emojiConfig,\n        EmojiIndex: EmojiIndex,\n        EmojiPicker: EmojiPicker,\n    };\n    return React.createElement(EmojiContext.Provider, { value: emojiContextValue }, children);\n};\nexport var useEmojiContext = function (componentName) {\n    var contextValue = useContext(EmojiContext);\n    if (!contextValue) {\n        console.warn(\"The useEmojiContext hook was called outside of the EmojiContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if EmojiContext\n * typing is desired while using the HOC withEmojiContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport var withEmojiContext = function (Component) {\n    var WithEmojiContextComponent = function (props) {\n        var componentContext = useEmojiContext();\n        return React.createElement(Component, __assign({}, props, componentContext));\n    };\n    WithEmojiContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithEmojiContextComponent;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}