{"ast":null,"code":"'use strict';\n\nconst BYTE_UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst BIBYTE_UNITS = ['B', 'kiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\nconst BIT_UNITS = ['b', 'kbit', 'Mbit', 'Gbit', 'Tbit', 'Pbit', 'Ebit', 'Zbit', 'Ybit'];\nconst BIBIT_UNITS = ['b', 'kibit', 'Mibit', 'Gibit', 'Tibit', 'Pibit', 'Eibit', 'Zibit', 'Yibit'];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n  let result = number;\n  if (typeof locale === 'string' || Array.isArray(locale)) {\n    result = number.toLocaleString(locale, options);\n  } else if (locale === true || options !== undefined) {\n    result = number.toLocaleString(undefined, options);\n  }\n  return result;\n};\nmodule.exports = (number, options) => {\n  if (!Number.isFinite(number)) {\n    throw new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n  }\n  options = Object.assign({\n    bits: false,\n    binary: false\n  }, options);\n  const UNITS = options.bits ? options.binary ? BIBIT_UNITS : BIT_UNITS : options.binary ? BIBYTE_UNITS : BYTE_UNITS;\n  if (options.signed && number === 0) {\n    return ` 0 ${UNITS[0]}`;\n  }\n  const isNegative = number < 0;\n  const prefix = isNegative ? '-' : options.signed ? '+' : '';\n  if (isNegative) {\n    number = -number;\n  }\n  let localeOptions;\n  if (options.minimumFractionDigits !== undefined) {\n    localeOptions = {\n      minimumFractionDigits: options.minimumFractionDigits\n    };\n  }\n  if (options.maximumFractionDigits !== undefined) {\n    localeOptions = Object.assign({\n      maximumFractionDigits: options.maximumFractionDigits\n    }, localeOptions);\n  }\n  if (number < 1) {\n    const numberString = toLocaleString(number, options.locale, localeOptions);\n    return prefix + numberString + ' ' + UNITS[0];\n  }\n  const exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n  // eslint-disable-next-line unicorn/prefer-exponentiation-operator\n  number /= Math.pow(options.binary ? 1024 : 1000, exponent);\n  if (!localeOptions) {\n    number = number.toPrecision(3);\n  }\n  const numberString = toLocaleString(Number(number), options.locale, localeOptions);\n  const unit = UNITS[exponent];\n  return prefix + numberString + ' ' + unit;\n};","map":{"version":3,"names":["BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","locale","options","result","Array","isArray","undefined","module","exports","Number","isFinite","TypeError","Object","assign","bits","binary","UNITS","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","numberString","exponent","Math","min","floor","log","log10","length","pow","toPrecision","unit"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/pretty-bytes/index.js"],"sourcesContent":["'use strict';\n\nconst BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB'\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB'\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit'\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nmodule.exports = (number, options) => {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = Object.assign({bits: false, binary: false}, options);\n\n\tconst UNITS = options.bits ?\n\t\t(options.binary ? BIBIT_UNITS : BIT_UNITS) :\n\t\t(options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = Object.assign({maximumFractionDigits: options.maximumFractionDigits}, localeOptions);\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\t// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\tnumber /= Math.pow(options.binary ? 1024 : 1000, exponent);\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}