{"ast":null,"code":"'use strict';\n\nconst ICAL = require('ical.js');\n\n// Copied from https://dxr.mozilla.org/comm-central/source/calendar/timezones/zones.json\n// And compiled using node compile-zones.js\n// See also https://github.com/mozilla-comm/ical.js/issues/195\nconst timezones = require('./zones-compiled.json');\nclass IcalExpander {\n  constructor(opts) {\n    this.maxIterations = opts.maxIterations != null ? opts.maxIterations : 1000;\n    this.skipInvalidDates = opts.skipInvalidDates != null ? opts.skipInvalidDates : false;\n    this.jCalData = ICAL.parse(opts.ics);\n    this.component = new ICAL.Component(this.jCalData);\n    this.events = this.component.getAllSubcomponents('vevent').map(vevent => new ICAL.Event(vevent));\n    if (this.skipInvalidDates) {\n      this.events = this.events.filter(evt => {\n        try {\n          evt.startDate.toJSDate();\n          evt.endDate.toJSDate();\n          return true;\n        } catch (err) {\n          // skipping events with invalid time\n          return false;\n        }\n      });\n    }\n  }\n  between(after, before) {\n    function isEventWithinRange(startTime, endTime) {\n      return (!after || endTime >= after.getTime()) && (!before || startTime <= before.getTime());\n    }\n    function getTimes(eventOrOccurrence) {\n      const startTime = eventOrOccurrence.startDate.toJSDate().getTime();\n      let endTime = eventOrOccurrence.endDate.toJSDate().getTime();\n\n      // If it is an all day event, the end date is set to 00:00 of the next day\n      // So we need to make it be 23:59:59 to compare correctly with the given range\n      if (eventOrOccurrence.endDate.isDate && endTime > startTime) {\n        endTime -= 1;\n      }\n      return {\n        startTime,\n        endTime\n      };\n    }\n    const exceptions = [];\n    this.events.forEach(event => {\n      if (event.isRecurrenceException()) exceptions.push(event);\n    });\n    const ret = {\n      events: [],\n      occurrences: []\n    };\n    this.events.filter(e => !e.isRecurrenceException()).forEach(event => {\n      const exdates = [];\n      event.component.getAllProperties('exdate').forEach(exdateProp => {\n        const exdate = exdateProp.getFirstValue();\n        exdates.push(exdate.toJSDate().getTime());\n      });\n\n      // Recurring event is handled differently\n      if (event.isRecurring()) {\n        const iterator = event.iterator();\n        let next;\n        let i = 0;\n        do {\n          i += 1;\n          next = iterator.next();\n          if (next) {\n            const occurrence = event.getOccurrenceDetails(next);\n            const {\n              startTime,\n              endTime\n            } = getTimes(occurrence);\n            const isOccurrenceExcluded = exdates.indexOf(startTime) !== -1;\n\n            // TODO check that within same day?\n            const exception = exceptions.find(ex => ex.uid === event.uid && ex.recurrenceId.toJSDate().getTime() === occurrence.startDate.toJSDate().getTime());\n\n            // We have passed the max date, stop\n            if (before && startTime > before.getTime()) break;\n\n            // Check that we are within our range\n            if (isEventWithinRange(startTime, endTime)) {\n              if (exception) {\n                ret.events.push(exception);\n              } else if (!isOccurrenceExcluded) {\n                ret.occurrences.push(occurrence);\n              }\n            }\n          }\n        } while (next && (!this.maxIterations || i < this.maxIterations));\n        return;\n      }\n\n      // Non-recurring event:\n      const {\n        startTime,\n        endTime\n      } = getTimes(event);\n      if (isEventWithinRange(startTime, endTime)) ret.events.push(event);\n    });\n    return ret;\n  }\n  before(before) {\n    return this.between(undefined, before);\n  }\n  after(after) {\n    return this.between(after);\n  }\n  all() {\n    return this.between();\n  }\n}\nfunction registerTimezones() {\n  Object.keys(timezones).forEach(key => {\n    const icsData = timezones[key];\n    const icsTimezone = `BEGIN:VTIMEZONE\\r\\nTZID:${key}\\r\\n${icsData}\\r\\nEND:VTIMEZONE`;\n    const parsed = ICAL.parse(`BEGIN:VCALENDAR\\nPRODID:-//tzurl.org//NONSGML Olson 2012h//EN\\nVERSION:2.0\\n${icsTimezone}\\nEND:VCALENDAR`);\n    const comp = new ICAL.Component(parsed);\n    const vtimezone = comp.getFirstSubcomponent('vtimezone');\n    ICAL.TimezoneService.register(key, new ICAL.Timezone(vtimezone));\n  });\n}\nregisterTimezones();\nmodule.exports = IcalExpander;","map":{"version":3,"names":["ICAL","require","timezones","IcalExpander","constructor","opts","maxIterations","skipInvalidDates","jCalData","parse","ics","component","Component","events","getAllSubcomponents","map","vevent","Event","filter","evt","startDate","toJSDate","endDate","err","between","after","before","isEventWithinRange","startTime","endTime","getTime","getTimes","eventOrOccurrence","isDate","exceptions","forEach","event","isRecurrenceException","push","ret","occurrences","e","exdates","getAllProperties","exdateProp","exdate","getFirstValue","isRecurring","iterator","next","i","occurrence","getOccurrenceDetails","isOccurrenceExcluded","indexOf","exception","find","ex","uid","recurrenceId","undefined","all","registerTimezones","Object","keys","key","icsData","icsTimezone","parsed","comp","vtimezone","getFirstSubcomponent","TimezoneService","register","Timezone","module","exports"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/ical-expander/index.js"],"sourcesContent":["'use strict';\n\nconst ICAL = require('ical.js');\n\n// Copied from https://dxr.mozilla.org/comm-central/source/calendar/timezones/zones.json\n// And compiled using node compile-zones.js\n// See also https://github.com/mozilla-comm/ical.js/issues/195\nconst timezones = require('./zones-compiled.json');\n\nclass IcalExpander {\n  constructor(opts) {\n    this.maxIterations = opts.maxIterations != null ? opts.maxIterations : 1000;\n    this.skipInvalidDates = opts.skipInvalidDates != null ? opts.skipInvalidDates : false;\n\n    this.jCalData = ICAL.parse(opts.ics);\n    this.component = new ICAL.Component(this.jCalData);\n    this.events = this.component.getAllSubcomponents('vevent').map(vevent => new ICAL.Event(vevent));\n\n    if (this.skipInvalidDates) {\n      this.events = this.events.filter((evt) => {\n        try {\n          evt.startDate.toJSDate();\n          evt.endDate.toJSDate();\n          return true;\n        } catch (err) {\n          // skipping events with invalid time\n          return false;\n        }\n      });\n    }\n  }\n\n  between(after, before) {\n    function isEventWithinRange(startTime, endTime) {\n      return (!after || endTime >= after.getTime()) &&\n      (!before || startTime <= before.getTime());\n    }\n\n    function getTimes(eventOrOccurrence) {\n      const startTime = eventOrOccurrence.startDate.toJSDate().getTime();\n      let endTime = eventOrOccurrence.endDate.toJSDate().getTime();\n\n      // If it is an all day event, the end date is set to 00:00 of the next day\n      // So we need to make it be 23:59:59 to compare correctly with the given range\n      if (eventOrOccurrence.endDate.isDate && (endTime > startTime)) {\n        endTime -= 1;\n      }\n\n      return { startTime, endTime };\n    }\n\n    const exceptions = [];\n\n    this.events.forEach((event) => {\n      if (event.isRecurrenceException()) exceptions.push(event);\n    });\n\n    const ret = {\n      events: [],\n      occurrences: [],\n    };\n\n    this.events.filter(e => !e.isRecurrenceException()).forEach((event) => {\n      const exdates = [];\n\n      event.component.getAllProperties('exdate').forEach((exdateProp) => {\n        const exdate = exdateProp.getFirstValue();\n        exdates.push(exdate.toJSDate().getTime());\n      });\n\n      // Recurring event is handled differently\n      if (event.isRecurring()) {\n        const iterator = event.iterator();\n\n        let next;\n        let i = 0;\n\n        do {\n          i += 1;\n          next = iterator.next();\n          if (next) {\n            const occurrence = event.getOccurrenceDetails(next);\n\n            const { startTime, endTime } = getTimes(occurrence);\n\n            const isOccurrenceExcluded = exdates.indexOf(startTime) !== -1;\n\n            // TODO check that within same day?\n            const exception = exceptions.find(ex => ex.uid === event.uid && ex.recurrenceId.toJSDate().getTime() === occurrence.startDate.toJSDate().getTime());\n\n            // We have passed the max date, stop\n            if (before && startTime > before.getTime()) break;\n\n            // Check that we are within our range\n            if (isEventWithinRange(startTime, endTime)) {\n              if (exception) {\n                ret.events.push(exception);\n              } else if (!isOccurrenceExcluded) {\n                ret.occurrences.push(occurrence);\n              }\n            }\n          }\n        }\n        while (next && (!this.maxIterations || i < this.maxIterations));\n\n        return;\n      }\n\n      // Non-recurring event:\n      const { startTime, endTime } = getTimes(event);\n\n      if (isEventWithinRange(startTime, endTime)) ret.events.push(event);\n    });\n\n    return ret;\n  }\n\n  before(before) {\n    return this.between(undefined, before);\n  }\n\n  after(after) {\n    return this.between(after);\n  }\n\n  all() {\n    return this.between();\n  }\n}\n\nfunction registerTimezones() {\n  Object.keys(timezones).forEach((key) => {\n    const icsData = timezones[key];\n    const icsTimezone = `BEGIN:VTIMEZONE\\r\\nTZID:${key}\\r\\n${icsData}\\r\\nEND:VTIMEZONE`;\n    const parsed = ICAL.parse(`BEGIN:VCALENDAR\\nPRODID:-//tzurl.org//NONSGML Olson 2012h//EN\\nVERSION:2.0\\n${icsTimezone}\\nEND:VCALENDAR`);\n    const comp = new ICAL.Component(parsed);\n    const vtimezone = comp.getFirstSubcomponent('vtimezone');\n\n    ICAL.TimezoneService.register(key, new ICAL.Timezone(vtimezone));\n  });\n}\n\nregisterTimezones();\n\nmodule.exports = IcalExpander;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}