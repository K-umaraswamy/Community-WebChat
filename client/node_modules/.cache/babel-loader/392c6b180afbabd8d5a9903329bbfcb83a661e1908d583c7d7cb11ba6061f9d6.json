{"ast":null,"code":"import { isDate, isDayOrMoment, isNumberOrString } from '../context';\nexport var notValidDateWarning = 'MessageTimestamp was called without a message, or message has invalid created_at date.';\nexport var noParsingFunctionWarning = 'MessageTimestamp was called but there is no datetime parsing function available';\nexport function getDateString(_a) {\n  var calendar = _a.calendar,\n    format = _a.format,\n    formatDate = _a.formatDate,\n    messageCreatedAt = _a.messageCreatedAt,\n    tDateTimeParser = _a.tDateTimeParser;\n  if (!messageCreatedAt || typeof messageCreatedAt === 'string' && !Date.parse(messageCreatedAt)) {\n    console.warn(notValidDateWarning);\n    return null;\n  }\n  if (typeof formatDate === 'function') {\n    return formatDate(new Date(messageCreatedAt));\n  }\n  if (!tDateTimeParser) {\n    console.warn(noParsingFunctionWarning);\n    return null;\n  }\n  var parsedTime = tDateTimeParser(messageCreatedAt);\n  if (isDayOrMoment(parsedTime)) {\n    /**\n     * parsedTime.calendar is guaranteed on the type but is only\n     * available when a user calls dayjs.extend(calendar)\n     */\n    return calendar && parsedTime.calendar ? parsedTime.calendar() : parsedTime.format(format);\n  }\n  if (isDate(parsedTime)) {\n    return parsedTime.toDateString();\n  }\n  if (isNumberOrString(parsedTime)) {\n    return parsedTime;\n  }\n  return null;\n}","map":{"version":3,"names":["isDate","isDayOrMoment","isNumberOrString","notValidDateWarning","noParsingFunctionWarning","getDateString","_a","calendar","format","formatDate","messageCreatedAt","tDateTimeParser","Date","parse","console","warn","parsedTime","toDateString"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/stream-chat-react/dist/i18n/utils.js"],"sourcesContent":["import { isDate, isDayOrMoment, isNumberOrString, } from '../context';\nexport var notValidDateWarning = 'MessageTimestamp was called without a message, or message has invalid created_at date.';\nexport var noParsingFunctionWarning = 'MessageTimestamp was called but there is no datetime parsing function available';\nexport function getDateString(_a) {\n    var calendar = _a.calendar, format = _a.format, formatDate = _a.formatDate, messageCreatedAt = _a.messageCreatedAt, tDateTimeParser = _a.tDateTimeParser;\n    if (!messageCreatedAt ||\n        (typeof messageCreatedAt === 'string' && !Date.parse(messageCreatedAt))) {\n        console.warn(notValidDateWarning);\n        return null;\n    }\n    if (typeof formatDate === 'function') {\n        return formatDate(new Date(messageCreatedAt));\n    }\n    if (!tDateTimeParser) {\n        console.warn(noParsingFunctionWarning);\n        return null;\n    }\n    var parsedTime = tDateTimeParser(messageCreatedAt);\n    if (isDayOrMoment(parsedTime)) {\n        /**\n         * parsedTime.calendar is guaranteed on the type but is only\n         * available when a user calls dayjs.extend(calendar)\n         */\n        return calendar && parsedTime.calendar ? parsedTime.calendar() : parsedTime.format(format);\n    }\n    if (isDate(parsedTime)) {\n        return parsedTime.toDateString();\n    }\n    if (isNumberOrString(parsedTime)) {\n        return parsedTime;\n    }\n    return null;\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,aAAa,EAAEC,gBAAgB,QAAS,YAAY;AACrE,OAAO,IAAIC,mBAAmB,GAAG,wFAAwF;AACzH,OAAO,IAAIC,wBAAwB,GAAG,iFAAiF;AACvH,OAAO,SAASC,aAAaA,CAACC,EAAE,EAAE;EAC9B,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ;IAAEC,MAAM,GAAGF,EAAE,CAACE,MAAM;IAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;IAAEC,gBAAgB,GAAGJ,EAAE,CAACI,gBAAgB;IAAEC,eAAe,GAAGL,EAAE,CAACK,eAAe;EACxJ,IAAI,CAACD,gBAAgB,IAChB,OAAOA,gBAAgB,KAAK,QAAQ,IAAI,CAACE,IAAI,CAACC,KAAK,CAACH,gBAAgB,CAAE,EAAE;IACzEI,OAAO,CAACC,IAAI,CAACZ,mBAAmB,CAAC;IACjC,OAAO,IAAI;EACf;EACA,IAAI,OAAOM,UAAU,KAAK,UAAU,EAAE;IAClC,OAAOA,UAAU,CAAC,IAAIG,IAAI,CAACF,gBAAgB,CAAC,CAAC;EACjD;EACA,IAAI,CAACC,eAAe,EAAE;IAClBG,OAAO,CAACC,IAAI,CAACX,wBAAwB,CAAC;IACtC,OAAO,IAAI;EACf;EACA,IAAIY,UAAU,GAAGL,eAAe,CAACD,gBAAgB,CAAC;EAClD,IAAIT,aAAa,CAACe,UAAU,CAAC,EAAE;IAC3B;AACR;AACA;AACA;IACQ,OAAOT,QAAQ,IAAIS,UAAU,CAACT,QAAQ,GAAGS,UAAU,CAACT,QAAQ,CAAC,CAAC,GAAGS,UAAU,CAACR,MAAM,CAACA,MAAM,CAAC;EAC9F;EACA,IAAIR,MAAM,CAACgB,UAAU,CAAC,EAAE;IACpB,OAAOA,UAAU,CAACC,YAAY,CAAC,CAAC;EACpC;EACA,IAAIf,gBAAgB,CAACc,UAAU,CAAC,EAAE;IAC9B,OAAOA,UAAU;EACrB;EACA,OAAO,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}