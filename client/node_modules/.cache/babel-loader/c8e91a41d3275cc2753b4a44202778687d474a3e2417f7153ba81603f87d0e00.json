{"ast":null,"code":"/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport { containerPhrasing } from 'mdast-util-to-markdown/lib/util/container-phrasing.js';\nimport { track } from 'mdast-util-to-markdown/lib/util/track.js';\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = ['autolink', 'destinationLiteral', 'destinationRaw', 'reference', 'titleQuote', 'titleApostrophe'];\nhandleDelete.peek = peekDelete;\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {\n    strikethrough: enterStrikethrough\n  },\n  exit: {\n    strikethrough: exitStrikethrough\n  }\n};\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{\n    character: '~',\n    inConstruct: 'phrasing',\n    notInConstruct: constructsWithoutStrikethrough\n  }],\n  handlers: {\n    delete: handleDelete\n  }\n};\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({\n    type: 'delete',\n    children: []\n  }, token);\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token);\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions);\n  const exit = context.enter('strikethrough');\n  let value = tracker.move('~~');\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  });\n  value += tracker.move('~~');\n  exit();\n  return value;\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~';\n}","map":{"version":3,"names":["containerPhrasing","track","constructsWithoutStrikethrough","handleDelete","peek","peekDelete","gfmStrikethroughFromMarkdown","canContainEols","enter","strikethrough","enterStrikethrough","exit","exitStrikethrough","gfmStrikethroughToMarkdown","unsafe","character","inConstruct","notInConstruct","handlers","delete","token","type","children","node","_","context","safeOptions","tracker","value","move","current","before","after"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/mdast-util-gfm-strikethrough/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,iBAAiB,QAAO,uDAAuD;AACvF,SAAQC,KAAK,QAAO,0CAA0C;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,8BAA8B,GAAG,CACrC,UAAU,EACV,oBAAoB,EACpB,gBAAgB,EAChB,WAAW,EACX,YAAY,EACZ,iBAAiB,CAClB;AAEDC,YAAY,CAACC,IAAI,GAAGC,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,4BAA4B,GAAG;EAC1CC,cAAc,EAAE,CAAC,QAAQ,CAAC;EAC1BC,KAAK,EAAE;IAACC,aAAa,EAAEC;EAAkB,CAAC;EAC1CC,IAAI,EAAE;IAACF,aAAa,EAAEG;EAAiB;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,0BAA0B,GAAG;EACxCC,MAAM,EAAE,CACN;IACEC,SAAS,EAAE,GAAG;IACdC,WAAW,EAAE,UAAU;IACvBC,cAAc,EAAEf;EAClB,CAAC,CACF;EACDgB,QAAQ,EAAE;IAACC,MAAM,EAAEhB;EAAY;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASO,kBAAkBA,CAACU,KAAK,EAAE;EACjC,IAAI,CAACZ,KAAK,CAAC;IAACa,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAE,CAAC,EAAEF,KAAK,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA,SAASR,iBAAiBA,CAACQ,KAAK,EAAE;EAChC,IAAI,CAACT,IAAI,CAACS,KAAK,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA,SAASjB,YAAYA,CAACoB,IAAI,EAAEC,CAAC,EAAEC,OAAO,EAAEC,WAAW,EAAE;EACnD,MAAMC,OAAO,GAAG1B,KAAK,CAACyB,WAAW,CAAC;EAClC,MAAMf,IAAI,GAAGc,OAAO,CAACjB,KAAK,CAAC,eAAe,CAAC;EAC3C,IAAIoB,KAAK,GAAGD,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;EAC9BD,KAAK,IAAI5B,iBAAiB,CAACuB,IAAI,EAAEE,OAAO,EAAE;IACxC,GAAGE,OAAO,CAACG,OAAO,CAAC,CAAC;IACpBC,MAAM,EAAEH,KAAK;IACbI,KAAK,EAAE;EACT,CAAC,CAAC;EACFJ,KAAK,IAAID,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;EAC3BlB,IAAI,CAAC,CAAC;EACN,OAAOiB,KAAK;AACd;;AAEA;AACA,SAASvB,UAAUA,CAAA,EAAG;EACpB,OAAO,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}