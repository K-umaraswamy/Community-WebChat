{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `htmlExtensions` to\n * support GFM task list items when serializing to HTML.\n *\n * @type {HtmlExtension}\n */\nexport const gfmTaskListItemHtml = {\n  enter: {\n    taskListCheck() {\n      this.tag('<input type=\"checkbox\" disabled=\"\" ');\n    }\n  },\n  exit: {\n    taskListCheck() {\n      this.tag('/>');\n    },\n    taskListCheckValueChecked() {\n      this.tag('checked=\"\" ');\n    }\n  }\n};","map":{"version":3,"names":["gfmTaskListItemHtml","enter","taskListCheck","tag","exit","taskListCheckValueChecked"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/chat_Web/client/node_modules/micromark-extension-gfm-task-list-item/dev/lib/html.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `htmlExtensions` to\n * support GFM task list items when serializing to HTML.\n *\n * @type {HtmlExtension}\n */\nexport const gfmTaskListItemHtml = {\n  enter: {\n    taskListCheck() {\n      this.tag('<input type=\"checkbox\" disabled=\"\" ')\n    }\n  },\n  exit: {\n    taskListCheck() {\n      this.tag('/>')\n    },\n    taskListCheckValueChecked() {\n      this.tag('checked=\"\" ')\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,mBAAmB,GAAG;EACjCC,KAAK,EAAE;IACLC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACjD;EACF,CAAC;EACDC,IAAI,EAAE;IACJF,aAAaA,CAAA,EAAG;MACd,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC;IAChB,CAAC;IACDE,yBAAyBA,CAAA,EAAG;MAC1B,IAAI,CAACF,GAAG,CAAC,aAAa,CAAC;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}