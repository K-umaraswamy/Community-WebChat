{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { isDate, useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nexport var defaultTimestampFormat = 'h:mmA';\nvar UnMemoizedMessageTimestamp = function (props) {\n  var _a = props.calendar,\n    calendar = _a === void 0 ? false : _a,\n    _b = props.customClass,\n    customClass = _b === void 0 ? '' : _b,\n    _c = props.format,\n    format = _c === void 0 ? defaultTimestampFormat : _c,\n    propMessage = props.message;\n  var _d = useMessageContext('MessageTimestamp'),\n    formatDate = _d.formatDate,\n    contextMessage = _d.message;\n  var tDateTimeParser = useTranslationContext('MessageTimestamp').tDateTimeParser;\n  var message = propMessage || contextMessage;\n  var messageCreatedAt = message.created_at && isDate(message.created_at) ? message.created_at.toISOString() : message.created_at;\n  var when = useMemo(function () {\n    return getDateString({\n      calendar: calendar,\n      format: format,\n      formatDate: formatDate,\n      messageCreatedAt: messageCreatedAt,\n      tDateTimeParser: tDateTimeParser\n    });\n  }, [formatDate, calendar, tDateTimeParser, format, messageCreatedAt]);\n  if (!when) return null;\n  return React.createElement(\"time\", {\n    className: customClass,\n    dateTime: messageCreatedAt,\n    title: messageCreatedAt\n  }, when);\n};\nexport var MessageTimestamp = React.memo(UnMemoizedMessageTimestamp);","map":{"version":3,"names":["React","useMemo","useMessageContext","isDate","useTranslationContext","getDateString","defaultTimestampFormat","UnMemoizedMessageTimestamp","props","_a","calendar","_b","customClass","_c","format","propMessage","message","_d","formatDate","contextMessage","tDateTimeParser","messageCreatedAt","created_at","toISOString","when","createElement","className","dateTime","title","MessageTimestamp","memo"],"sources":["C:/Users/Amlanjyoti Pegu/Desktop/Community_Chat-project/client/node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { isDate, useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nexport var defaultTimestampFormat = 'h:mmA';\nvar UnMemoizedMessageTimestamp = function (props) {\n    var _a = props.calendar, calendar = _a === void 0 ? false : _a, _b = props.customClass, customClass = _b === void 0 ? '' : _b, _c = props.format, format = _c === void 0 ? defaultTimestampFormat : _c, propMessage = props.message;\n    var _d = useMessageContext('MessageTimestamp'), formatDate = _d.formatDate, contextMessage = _d.message;\n    var tDateTimeParser = useTranslationContext('MessageTimestamp').tDateTimeParser;\n    var message = propMessage || contextMessage;\n    var messageCreatedAt = message.created_at && isDate(message.created_at)\n        ? message.created_at.toISOString()\n        : message.created_at;\n    var when = useMemo(function () { return getDateString({ calendar: calendar, format: format, formatDate: formatDate, messageCreatedAt: messageCreatedAt, tDateTimeParser: tDateTimeParser }); }, [formatDate, calendar, tDateTimeParser, format, messageCreatedAt]);\n    if (!when)\n        return null;\n    return (React.createElement(\"time\", { className: customClass, dateTime: messageCreatedAt, title: messageCreatedAt }, when));\n};\nexport var MessageTimestamp = React.memo(UnMemoizedMessageTimestamp);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,MAAM,EAAEC,qBAAqB,QAAQ,kCAAkC;AAChF,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAO,IAAIC,sBAAsB,GAAG,OAAO;AAC3C,IAAIC,0BAA0B,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC9C,IAAIC,EAAE,GAAGD,KAAK,CAACE,QAAQ;IAAEA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEE,EAAE,GAAGH,KAAK,CAACI,WAAW;IAAEA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEE,EAAE,GAAGL,KAAK,CAACM,MAAM;IAAEA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGP,sBAAsB,GAAGO,EAAE;IAAEE,WAAW,GAAGP,KAAK,CAACQ,OAAO;EACnO,IAAIC,EAAE,GAAGf,iBAAiB,CAAC,kBAAkB,CAAC;IAAEgB,UAAU,GAAGD,EAAE,CAACC,UAAU;IAAEC,cAAc,GAAGF,EAAE,CAACD,OAAO;EACvG,IAAII,eAAe,GAAGhB,qBAAqB,CAAC,kBAAkB,CAAC,CAACgB,eAAe;EAC/E,IAAIJ,OAAO,GAAGD,WAAW,IAAII,cAAc;EAC3C,IAAIE,gBAAgB,GAAGL,OAAO,CAACM,UAAU,IAAInB,MAAM,CAACa,OAAO,CAACM,UAAU,CAAC,GACjEN,OAAO,CAACM,UAAU,CAACC,WAAW,CAAC,CAAC,GAChCP,OAAO,CAACM,UAAU;EACxB,IAAIE,IAAI,GAAGvB,OAAO,CAAC,YAAY;IAAE,OAAOI,aAAa,CAAC;MAAEK,QAAQ,EAAEA,QAAQ;MAAEI,MAAM,EAAEA,MAAM;MAAEI,UAAU,EAAEA,UAAU;MAAEG,gBAAgB,EAAEA,gBAAgB;MAAED,eAAe,EAAEA;IAAgB,CAAC,CAAC;EAAE,CAAC,EAAE,CAACF,UAAU,EAAER,QAAQ,EAAEU,eAAe,EAAEN,MAAM,EAAEO,gBAAgB,CAAC,CAAC;EAClQ,IAAI,CAACG,IAAI,EACL,OAAO,IAAI;EACf,OAAQxB,KAAK,CAACyB,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAEd,WAAW;IAAEe,QAAQ,EAAEN,gBAAgB;IAAEO,KAAK,EAAEP;EAAiB,CAAC,EAAEG,IAAI,CAAC;AAC9H,CAAC;AACD,OAAO,IAAIK,gBAAgB,GAAG7B,KAAK,CAAC8B,IAAI,CAACvB,0BAA0B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}