{"ast":null,"code":"import { createContext, forwardRef, useState, useImperativeHandle, createElement, useLayoutEffect, useEffect, useCallback, useContext } from 'react';\nimport { tap, init, curry1to0, subscribe, reset, always, publish, eventHandler, curry2to1, getValue } from '@virtuoso.dev/urx';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nvar _excluded = [\"children\"];\n/** @internal */\n\nfunction omit(keys, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = keys.length;\n  while (idx < len) {\n    index[keys[idx]] = 1;\n    idx += 1;\n  }\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n}\nvar useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n/**\r\n * Converts a system spec to React component by mapping the system streams to component properties, events and methods. Returns hooks for querying and modifying\r\n * the system streams from the component's child components.\r\n * @param systemSpec The return value from a [[system]] call.\r\n * @param map The streams to props / events / methods mapping Check [[SystemPropsMap]] for more details.\r\n * @param Root The optional React component to render. By default, the resulting component renders nothing, acting as a logical wrapper for its children.\r\n * @returns an object containing the following:\r\n *  - `Component`: the React component.\r\n *  - `useEmitterValue`: a hook that lets child components use values emitted from the specified output stream.\r\n *  - `useEmitter`: a hook that calls the provided callback whenever the specified stream emits a value.\r\n *  - `usePublisher`: a hook which lets child components publish values to the specified stream.\r\n *  <hr />\r\n */\n\nfunction systemToComponent(systemSpec, map, Root) {\n  var requiredPropNames = Object.keys(map.required || {});\n  var optionalPropNames = Object.keys(map.optional || {});\n  var methodNames = Object.keys(map.methods || {});\n  var eventNames = Object.keys(map.events || {});\n  var Context = createContext({});\n  function applyPropsToSystem(system, props) {\n    if (system['propsReady']) {\n      publish(system['propsReady'], false);\n    }\n    for (var _iterator = _createForOfIteratorHelperLoose(requiredPropNames), _step; !(_step = _iterator()).done;) {\n      var requiredPropName = _step.value;\n      var stream = system[map.required[requiredPropName]];\n      publish(stream, props[requiredPropName]);\n    }\n    for (var _iterator2 = _createForOfIteratorHelperLoose(optionalPropNames), _step2; !(_step2 = _iterator2()).done;) {\n      var optionalPropName = _step2.value;\n      if (optionalPropName in props) {\n        var _stream = system[map.optional[optionalPropName]];\n        publish(_stream, props[optionalPropName]);\n      }\n    }\n    if (system['propsReady']) {\n      publish(system['propsReady'], true);\n    }\n  }\n  function buildMethods(system) {\n    return methodNames.reduce(function (acc, methodName) {\n      acc[methodName] = function (value) {\n        var stream = system[map.methods[methodName]];\n        publish(stream, value);\n      };\n      return acc;\n    }, {});\n  }\n  function buildEventHandlers(system) {\n    return eventNames.reduce(function (handlers, eventName) {\n      handlers[eventName] = eventHandler(system[map.events[eventName]]);\n      return handlers;\n    }, {});\n  }\n  /**\r\n   * A React component generated from an urx system\r\n   */\n\n  var Component = forwardRef(function (propsWithChildren, ref) {\n    var children = propsWithChildren.children,\n      props = _objectWithoutPropertiesLoose(propsWithChildren, _excluded);\n    var _useState = useState(function () {\n        return tap(init(systemSpec), function (system) {\n          return applyPropsToSystem(system, props);\n        });\n      }),\n      system = _useState[0];\n    var _useState2 = useState(curry1to0(buildEventHandlers, system)),\n      handlers = _useState2[0];\n    useIsomorphicLayoutEffect(function () {\n      for (var _iterator3 = _createForOfIteratorHelperLoose(eventNames), _step3; !(_step3 = _iterator3()).done;) {\n        var eventName = _step3.value;\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName]);\n        }\n      }\n      return function () {\n        Object.values(handlers).map(reset);\n      };\n    }, [props, handlers, system]);\n    useIsomorphicLayoutEffect(function () {\n      applyPropsToSystem(system, props);\n    });\n    useImperativeHandle(ref, always(buildMethods(system)));\n    return createElement(Context.Provider, {\n      value: system\n    }, Root ? createElement(Root, omit([].concat(requiredPropNames, optionalPropNames, eventNames), props), children) : children);\n  });\n  var usePublisher = function usePublisher(key) {\n    return useCallback(curry2to1(publish, useContext(Context)[key]), [key]);\n  };\n  /**\r\n   * Returns the value emitted from the stream.\r\n   */\n\n  var useEmitterValue = function useEmitterValue(key) {\n    var context = useContext(Context);\n    var source = context[key];\n    var _useState3 = useState(curry1to0(getValue, source)),\n      value = _useState3[0],\n      setValue = _useState3[1];\n    useIsomorphicLayoutEffect(function () {\n      return subscribe(source, function (next) {\n        if (next !== value) {\n          setValue(always(next));\n        }\n      });\n    }, [source, value]);\n    return value;\n  };\n  var useEmitter = function useEmitter(key, callback) {\n    var context = useContext(Context);\n    var source = context[key];\n    useIsomorphicLayoutEffect(function () {\n      return subscribe(source, callback);\n    }, [callback, source]);\n  };\n  return {\n    Component: Component,\n    usePublisher: usePublisher,\n    useEmitterValue: useEmitterValue,\n    useEmitter: useEmitter\n  };\n}\nexport { systemToComponent };","map":{"version":3,"names":["omit","keys","obj","result","index","idx","len","length","prop","hasOwnProperty","useIsomorphicLayoutEffect","document","useLayoutEffect","useEffect","systemToComponent","systemSpec","map","Root","requiredPropNames","Object","required","optionalPropNames","optional","methodNames","methods","eventNames","events","Context","createContext","applyPropsToSystem","system","props","publish","_iterator","_createForOfIteratorHelperLoose","_step","done","requiredPropName","value","stream","_iterator2","_step2","optionalPropName","_stream","buildMethods","reduce","acc","methodName","buildEventHandlers","handlers","eventName","eventHandler","Component","forwardRef","propsWithChildren","ref","children","_objectWithoutPropertiesLoose","_excluded","_useState","useState","tap","init","_useState2","curry1to0","_iterator3","_step3","subscribe","values","reset","useImperativeHandle","always","createElement","Provider","concat","usePublisher","key","useCallback","curry2to1","useContext","useEmitterValue","context","source","_useState3","getValue","setValue","next","useEmitter","callback"],"sources":["C:\\Users\\Amlanjyoti Pegu\\Desktop\\chat_Web\\client\\node_modules\\@virtuoso.dev\\react-urx\\src\\index.ts"],"sourcesContent":["/**\n * `@virtuoso.dev/react-urx` exports the [[systemToComponent]] function.\n * It wraps urx systems in to UI **logic provider components**,\n * mapping the system input and output streams to the component input / output points.\n *\n * ### Simple System wrapped as React Component\n *\n * ```tsx\n * const sys = system(() => {\n *   const foo = statefulStream(42)\n *   return { foo }\n * })\n *\n * const { Component: MyComponent, useEmitterValue } = systemToComponent(sys, {\n *   required: { fooProp: 'foo' },\n * })\n *\n * const Child = () => {\n *   const foo = useEmitterValue('foo')\n *   return <div>{foo}</div>\n * }\n *\n * const App = () => {\n *   return <Comp fooProp={42}><Child /><Comp>\n * }\n * ```\n *\n * @packageDocumentation\n */\nimport * as React from 'react'\nimport {\n  ComponentType,\n  createContext,\n  createElement,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactNode,\n  RefAttributes,\n  useContext,\n  useImperativeHandle,\n  useState,\n  useCallback,\n} from 'react'\nimport {\n  AnySystemSpec,\n  reset,\n  curry1to0,\n  curry2to1,\n  Emitter,\n  SR,\n  eventHandler,\n  getValue,\n  publish,\n  Publisher,\n  init,\n  StatefulStream,\n  Stream,\n  subscribe,\n  always,\n  tap,\n} from '@virtuoso.dev/urx'\n\n/** @internal */\ninterface Dict<T> {\n  [key: string]: T\n}\n\n/** @internal */\nfunction omit<O extends Dict<any>, K extends readonly string[]>(keys: K, obj: O): Omit<O, K[number]> {\n  var result = {} as Dict<any>\n  var index = {} as Dict<1>\n  var idx = 0\n  var len = keys.length\n\n  while (idx < len) {\n    index[keys[idx]] = 1\n    idx += 1\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop]\n    }\n  }\n\n  return result as any\n}\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\n/** @internal */\nexport type Observable<T> = Emitter<T> | Publisher<T>\n\n/**\n * Describes the mapping between the system streams and the component properties.\n * Each property uses the keys as the names of the properties and the values as the corresponding stream names.\n * @typeParam SS the type of the system.\n */\nexport interface SystemPropsMap<SS extends AnySystemSpec, K = keyof SR<SS>, D = { [key: string]: K }> {\n  /**\n   * Specifies the required component properties.\n   */\n  required?: D\n  /**\n   * Specifies the optional component properties.\n   */\n  optional?: D\n  /**\n   * Specifies the component methods, if any. Streams are converted to methods with a single argument.\n   * When invoked, the method publishes the value of the argument to the specified stream.\n   */\n  methods?: D\n  /**\n   * Specifies the component \"event\" properties, if any.\n   * Event properties accept callback functions which get executed when the stream emits a new value.\n   */\n  events?: D\n}\n\n/** @internal */\nexport type PropsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['required'], string>]: M['required'][K] extends string\n    ? SR<E>[M['required'][K]] extends Observable<infer R>\n      ? R\n      : never\n    : never\n} &\n  {\n    [K in Extract<keyof M['optional'], string>]?: M['optional'][K] extends string\n      ? SR<E>[M['optional'][K]] extends Observable<infer R>\n        ? R\n        : never\n      : never\n  } &\n  {\n    [K in Extract<keyof M['events'], string>]?: M['events'][K] extends string\n      ? SR<E>[M['events'][K]] extends Observable<infer R>\n        ? (value: R) => void\n        : never\n      : never\n  }\n\n/** @internal */\nexport type MethodsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['methods'], string>]: M['methods'][K] extends string\n    ? SR<E>[M['methods'][K]] extends Observable<infer R>\n      ? (value: R) => void\n      : never\n    : never\n}\n\n/**\n * Used to correctly specify type refs for system components\n *\n * ```tsx\n * const s = system(() => { return { a: statefulStream(0) } })\n * const { Component } = systemToComponent(s)\n *\n * const App = () => {\n *  const ref = useRef<RefHandle<typeof Component>>()\n *  return <Component ref={ref} />\n * }\n * ```\n *\n * @typeParam T the type of the component\n */\nexport type RefHandle<T> = T extends ForwardRefExoticComponent<RefAttributes<infer Handle>> ? Handle : never\n\n/**\n * Converts a system spec to React component by mapping the system streams to component properties, events and methods. Returns hooks for querying and modifying\n * the system streams from the component's child components.\n * @param systemSpec The return value from a [[system]] call.\n * @param map The streams to props / events / methods mapping Check [[SystemPropsMap]] for more details.\n * @param Root The optional React component to render. By default, the resulting component renders nothing, acting as a logical wrapper for its children.\n * @returns an object containing the following:\n *  - `Component`: the React component.\n *  - `useEmitterValue`: a hook that lets child components use values emitted from the specified output stream.\n *  - `useEmitter`: a hook that calls the provided callback whenever the specified stream emits a value.\n *  - `usePublisher`: a hook which lets child components publish values to the specified stream.\n *  <hr />\n */\nexport function systemToComponent<SS extends AnySystemSpec, M extends SystemPropsMap<SS>, S extends SR<SS>, R>(\n  systemSpec: SS,\n  map: M,\n  Root?: R\n) {\n  const requiredPropNames = Object.keys(map.required || {})\n  const optionalPropNames = Object.keys(map.optional || {})\n  const methodNames = Object.keys(map.methods || {})\n  const eventNames = Object.keys(map.events || {})\n  const Context = createContext<SR<SS>>(({} as unknown) as any)\n\n  type RootCompProps = R extends ComponentType<infer RP> ? RP : { children?: ReactNode }\n\n  type CompProps = PropsFromPropMap<SS, M> & RootCompProps\n\n  type CompMethods = MethodsFromPropMap<SS, M>\n\n  function applyPropsToSystem(system: ReturnType<SS['constructor']>, props: any) {\n    if (system['propsReady']) {\n      publish(system['propsReady'], false)\n    }\n\n    for (const requiredPropName of requiredPropNames) {\n      const stream = system[map.required![requiredPropName]]\n      publish(stream, (props as any)[requiredPropName])\n    }\n\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream = system[map.optional![optionalPropName]]\n        publish(stream, (props as any)[optionalPropName])\n      }\n    }\n\n    if (system['propsReady']) {\n      publish(system['propsReady'], true)\n    }\n  }\n\n  function buildMethods(system: ReturnType<SS['constructor']>) {\n    return methodNames.reduce((acc, methodName) => {\n      ;(acc as any)[methodName] = (value: any) => {\n        const stream = system[map.methods![methodName]]\n        publish(stream, value)\n      }\n      return acc\n    }, {} as CompMethods)\n  }\n\n  function buildEventHandlers(system: ReturnType<SS['constructor']>) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system[map.events![eventName]])\n      return handlers\n    }, {} as { [key: string]: Emitter<any> })\n  }\n\n  /**\n   * A React component generated from an urx system\n   */\n  const Component = forwardRef<CompMethods, CompProps>((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren as any\n\n    const [system] = useState(() => {\n      return tap(init(systemSpec), system => applyPropsToSystem(system, props))\n    })\n\n    const [handlers] = useState(curry1to0(buildEventHandlers, system))\n\n    useIsomorphicLayoutEffect(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName])\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset)\n      }\n    }, [props, handlers, system])\n\n    useIsomorphicLayoutEffect(() => {\n      applyPropsToSystem(system, props)\n    })\n\n    useImperativeHandle(ref, always(buildMethods(system)))\n\n    return createElement(\n      Context.Provider,\n      { value: system },\n      Root\n        ? createElement(\n            (Root as unknown) as ComponentType,\n            omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n            children\n          )\n        : children\n    )\n  })\n\n  const usePublisher = <K extends keyof S>(key: K) => {\n    return useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]) as (\n      value: S[K] extends Stream<infer R> ? R : never\n    ) => void\n  }\n\n  /**\n   * Returns the value emitted from the stream.\n   */\n  const useEmitterValue = <K extends keyof S, V = S[K] extends StatefulStream<infer R> ? R : never>(key: K) => {\n    const context = useContext(Context)\n    const source: StatefulStream<V> = context[key]\n\n    const [value, setValue] = useState(curry1to0(getValue, source))\n\n    useIsomorphicLayoutEffect(\n      () =>\n        subscribe(source, (next: V) => {\n          if (next !== value) {\n            setValue(always(next))\n          }\n        }),\n      [source, value]\n    )\n\n    return value\n  }\n\n  const useEmitter = <K extends keyof S, V = S[K] extends Stream<infer R> ? R : never>(key: K, callback: (value: V) => void) => {\n    const context = useContext(Context)\n    const source: Stream<V> = context[key]\n    useIsomorphicLayoutEffect(() => subscribe(source, callback), [callback, source])\n  }\n\n  return {\n    Component,\n    usePublisher,\n    useEmitterValue,\n    useEmitter,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}